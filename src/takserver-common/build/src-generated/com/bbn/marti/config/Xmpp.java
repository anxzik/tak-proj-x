//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.bbn.marti.config;

import java.io.Serializable;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * XMPP Configuration
 * 
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <attribute name="xmppHost" type="{http://www.w3.org/2001/XMLSchema}string" default="127.0.0.1" />
 *       <attribute name="xmppPort" type="{http://www.w3.org/2001/XMLSchema}int" default="5222" />
 *       <attribute name="takServerHost" type="{http://www.w3.org/2001/XMLSchema}string" default="127.0.0.1" />
 *       <attribute name="takServerPort" type="{http://www.w3.org/2001/XMLSchema}int" default="8443" />
 *       <attribute name="xmppSharedSecret" type="{http://www.w3.org/2001/XMLSchema}string" default="" />
 *       <attribute name="xmppComponentRetryCount" type="{http://www.w3.org/2001/XMLSchema}int" default="5" />
 *       <attribute name="xmppComponentRetryDelay" type="{http://www.w3.org/2001/XMLSchema}int" default="5" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "xmpp")
public class Xmpp
    implements Serializable
{

    private static final long serialVersionUID = 6107951534079953L;
    @XmlAttribute(name = "xmppHost")
    protected String xmppHost;
    @XmlAttribute(name = "xmppPort")
    protected Integer xmppPort;
    @XmlAttribute(name = "takServerHost")
    protected String takServerHost;
    @XmlAttribute(name = "takServerPort")
    protected Integer takServerPort;
    @XmlAttribute(name = "xmppSharedSecret")
    protected String xmppSharedSecret;
    @XmlAttribute(name = "xmppComponentRetryCount")
    protected Integer xmppComponentRetryCount;
    @XmlAttribute(name = "xmppComponentRetryDelay")
    protected Integer xmppComponentRetryDelay;

    /**
     * Gets the value of the xmppHost property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getXmppHost() {
        if (xmppHost == null) {
            return "127.0.0.1";
        } else {
            return xmppHost;
        }
    }

    /**
     * Sets the value of the xmppHost property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setXmppHost(String value) {
        this.xmppHost = value;
    }

    /**
     * Gets the value of the xmppPort property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getXmppPort() {
        if (xmppPort == null) {
            return  5222;
        } else {
            return xmppPort;
        }
    }

    /**
     * Sets the value of the xmppPort property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setXmppPort(Integer value) {
        this.xmppPort = value;
    }

    /**
     * Gets the value of the takServerHost property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTakServerHost() {
        if (takServerHost == null) {
            return "127.0.0.1";
        } else {
            return takServerHost;
        }
    }

    /**
     * Sets the value of the takServerHost property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTakServerHost(String value) {
        this.takServerHost = value;
    }

    /**
     * Gets the value of the takServerPort property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getTakServerPort() {
        if (takServerPort == null) {
            return  8443;
        } else {
            return takServerPort;
        }
    }

    /**
     * Sets the value of the takServerPort property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTakServerPort(Integer value) {
        this.takServerPort = value;
    }

    /**
     * Gets the value of the xmppSharedSecret property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getXmppSharedSecret() {
        if (xmppSharedSecret == null) {
            return "";
        } else {
            return xmppSharedSecret;
        }
    }

    /**
     * Sets the value of the xmppSharedSecret property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setXmppSharedSecret(String value) {
        this.xmppSharedSecret = value;
    }

    /**
     * Gets the value of the xmppComponentRetryCount property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getXmppComponentRetryCount() {
        if (xmppComponentRetryCount == null) {
            return  5;
        } else {
            return xmppComponentRetryCount;
        }
    }

    /**
     * Sets the value of the xmppComponentRetryCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setXmppComponentRetryCount(Integer value) {
        this.xmppComponentRetryCount = value;
    }

    /**
     * Gets the value of the xmppComponentRetryDelay property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getXmppComponentRetryDelay() {
        if (xmppComponentRetryDelay == null) {
            return  5;
        } else {
            return xmppComponentRetryDelay;
        }
    }

    /**
     * Sets the value of the xmppComponentRetryDelay property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setXmppComponentRetryDelay(Integer value) {
        this.xmppComponentRetryDelay = value;
    }

}
