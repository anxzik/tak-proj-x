// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fig.proto

package com.atakmap.Tak;

/**
 * Protobuf type {@code com.atakmap.BinaryBlob}
 */
public  final class BinaryBlob extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.atakmap.BinaryBlob)
    BinaryBlobOrBuilder {
  // Use BinaryBlob.newBuilder() to construct.
  private BinaryBlob(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BinaryBlob() {
    type_ = 0;
    data_ = com.google.protobuf.ByteString.EMPTY;
    filename_ = "";
    timestamp_ = 0L;
    description_ = "";
    federateProvenance_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private BinaryBlob(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 18: {

            data_ = input.readBytes();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            filename_ = s;
            break;
          }
          case 32: {

            timestamp_ = input.readInt64();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            description_ = s;
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              federateProvenance_ = new java.util.ArrayList<com.atakmap.Tak.FederateProvenance>();
              mutable_bitField0_ |= 0x00000020;
            }
            federateProvenance_.add(
                input.readMessage(com.atakmap.Tak.FederateProvenance.parser(), extensionRegistry));
            break;
          }
          case 58: {
            com.atakmap.Tak.FederateHops.Builder subBuilder = null;
            if (federateHops_ != null) {
              subBuilder = federateHops_.toBuilder();
            }
            federateHops_ = input.readMessage(com.atakmap.Tak.FederateHops.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(federateHops_);
              federateHops_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        federateProvenance_ = java.util.Collections.unmodifiableList(federateProvenance_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.atakmap.Tak.FigProto.internal_static_com_atakmap_BinaryBlob_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.atakmap.Tak.FigProto.internal_static_com_atakmap_BinaryBlob_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.atakmap.Tak.BinaryBlob.class, com.atakmap.Tak.BinaryBlob.Builder.class);
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
   */
  public com.atakmap.Tak.BINARY_TYPES getType() {
    com.atakmap.Tak.BINARY_TYPES result = com.atakmap.Tak.BINARY_TYPES.valueOf(type_);
    return result == null ? com.atakmap.Tak.BINARY_TYPES.UNRECOGNIZED : result;
  }

  public static final int DATA_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString data_;
  /**
   * <code>optional bytes data = 2;</code>
   */
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  public static final int FILENAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object filename_;
  /**
   * <code>optional string filename = 3;</code>
   */
  public java.lang.String getFilename() {
    java.lang.Object ref = filename_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filename_ = s;
      return s;
    }
  }
  /**
   * <code>optional string filename = 3;</code>
   */
  public com.google.protobuf.ByteString
      getFilenameBytes() {
    java.lang.Object ref = filename_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      filename_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 4;
  private long timestamp_;
  /**
   * <code>optional int64 timestamp = 4;</code>
   */
  public long getTimestamp() {
    return timestamp_;
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 5;
  private volatile java.lang.Object description_;
  /**
   * <code>optional string description = 5;</code>
   */
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <code>optional string description = 5;</code>
   */
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FEDERATEPROVENANCE_FIELD_NUMBER = 6;
  private java.util.List<com.atakmap.Tak.FederateProvenance> federateProvenance_;
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
   */
  public java.util.List<com.atakmap.Tak.FederateProvenance> getFederateProvenanceList() {
    return federateProvenance_;
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
   */
  public java.util.List<? extends com.atakmap.Tak.FederateProvenanceOrBuilder> 
      getFederateProvenanceOrBuilderList() {
    return federateProvenance_;
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
   */
  public int getFederateProvenanceCount() {
    return federateProvenance_.size();
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
   */
  public com.atakmap.Tak.FederateProvenance getFederateProvenance(int index) {
    return federateProvenance_.get(index);
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
   */
  public com.atakmap.Tak.FederateProvenanceOrBuilder getFederateProvenanceOrBuilder(
      int index) {
    return federateProvenance_.get(index);
  }

  public static final int FEDERATEHOPS_FIELD_NUMBER = 7;
  private com.atakmap.Tak.FederateHops federateHops_;
  /**
   * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
   */
  public boolean hasFederateHops() {
    return federateHops_ != null;
  }
  /**
   * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
   */
  public com.atakmap.Tak.FederateHops getFederateHops() {
    return federateHops_ == null ? com.atakmap.Tak.FederateHops.getDefaultInstance() : federateHops_;
  }
  /**
   * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
   */
  public com.atakmap.Tak.FederateHopsOrBuilder getFederateHopsOrBuilder() {
    return getFederateHops();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != com.atakmap.Tak.BINARY_TYPES.EMPTY.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (!data_.isEmpty()) {
      output.writeBytes(2, data_);
    }
    if (!getFilenameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filename_);
    }
    if (timestamp_ != 0L) {
      output.writeInt64(4, timestamp_);
    }
    if (!getDescriptionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, description_);
    }
    for (int i = 0; i < federateProvenance_.size(); i++) {
      output.writeMessage(6, federateProvenance_.get(i));
    }
    if (federateHops_ != null) {
      output.writeMessage(7, getFederateHops());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != com.atakmap.Tak.BINARY_TYPES.EMPTY.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (!data_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, data_);
    }
    if (!getFilenameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filename_);
    }
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, timestamp_);
    }
    if (!getDescriptionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, description_);
    }
    for (int i = 0; i < federateProvenance_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, federateProvenance_.get(i));
    }
    if (federateHops_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getFederateHops());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.atakmap.Tak.BinaryBlob)) {
      return super.equals(obj);
    }
    com.atakmap.Tak.BinaryBlob other = (com.atakmap.Tak.BinaryBlob) obj;

    boolean result = true;
    result = result && type_ == other.type_;
    result = result && getData()
        .equals(other.getData());
    result = result && getFilename()
        .equals(other.getFilename());
    result = result && (getTimestamp()
        == other.getTimestamp());
    result = result && getDescription()
        .equals(other.getDescription());
    result = result && getFederateProvenanceList()
        .equals(other.getFederateProvenanceList());
    result = result && (hasFederateHops() == other.hasFederateHops());
    if (hasFederateHops()) {
      result = result && getFederateHops()
          .equals(other.getFederateHops());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + DATA_FIELD_NUMBER;
    hash = (53 * hash) + getData().hashCode();
    hash = (37 * hash) + FILENAME_FIELD_NUMBER;
    hash = (53 * hash) + getFilename().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    if (getFederateProvenanceCount() > 0) {
      hash = (37 * hash) + FEDERATEPROVENANCE_FIELD_NUMBER;
      hash = (53 * hash) + getFederateProvenanceList().hashCode();
    }
    if (hasFederateHops()) {
      hash = (37 * hash) + FEDERATEHOPS_FIELD_NUMBER;
      hash = (53 * hash) + getFederateHops().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.atakmap.Tak.BinaryBlob parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.atakmap.Tak.BinaryBlob parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.atakmap.Tak.BinaryBlob parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.atakmap.Tak.BinaryBlob parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.atakmap.Tak.BinaryBlob prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.atakmap.BinaryBlob}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.atakmap.BinaryBlob)
      com.atakmap.Tak.BinaryBlobOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.atakmap.Tak.FigProto.internal_static_com_atakmap_BinaryBlob_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.atakmap.Tak.FigProto.internal_static_com_atakmap_BinaryBlob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.atakmap.Tak.BinaryBlob.class, com.atakmap.Tak.BinaryBlob.Builder.class);
    }

    // Construct using com.atakmap.Tak.BinaryBlob.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFederateProvenanceFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      type_ = 0;

      data_ = com.google.protobuf.ByteString.EMPTY;

      filename_ = "";

      timestamp_ = 0L;

      description_ = "";

      if (federateProvenanceBuilder_ == null) {
        federateProvenance_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        federateProvenanceBuilder_.clear();
      }
      if (federateHopsBuilder_ == null) {
        federateHops_ = null;
      } else {
        federateHops_ = null;
        federateHopsBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.atakmap.Tak.FigProto.internal_static_com_atakmap_BinaryBlob_descriptor;
    }

    public com.atakmap.Tak.BinaryBlob getDefaultInstanceForType() {
      return com.atakmap.Tak.BinaryBlob.getDefaultInstance();
    }

    public com.atakmap.Tak.BinaryBlob build() {
      com.atakmap.Tak.BinaryBlob result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.atakmap.Tak.BinaryBlob buildPartial() {
      com.atakmap.Tak.BinaryBlob result = new com.atakmap.Tak.BinaryBlob(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.type_ = type_;
      result.data_ = data_;
      result.filename_ = filename_;
      result.timestamp_ = timestamp_;
      result.description_ = description_;
      if (federateProvenanceBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          federateProvenance_ = java.util.Collections.unmodifiableList(federateProvenance_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.federateProvenance_ = federateProvenance_;
      } else {
        result.federateProvenance_ = federateProvenanceBuilder_.build();
      }
      if (federateHopsBuilder_ == null) {
        result.federateHops_ = federateHops_;
      } else {
        result.federateHops_ = federateHopsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.atakmap.Tak.BinaryBlob) {
        return mergeFrom((com.atakmap.Tak.BinaryBlob)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.atakmap.Tak.BinaryBlob other) {
      if (other == com.atakmap.Tak.BinaryBlob.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
        setData(other.getData());
      }
      if (!other.getFilename().isEmpty()) {
        filename_ = other.filename_;
        onChanged();
      }
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        onChanged();
      }
      if (federateProvenanceBuilder_ == null) {
        if (!other.federateProvenance_.isEmpty()) {
          if (federateProvenance_.isEmpty()) {
            federateProvenance_ = other.federateProvenance_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFederateProvenanceIsMutable();
            federateProvenance_.addAll(other.federateProvenance_);
          }
          onChanged();
        }
      } else {
        if (!other.federateProvenance_.isEmpty()) {
          if (federateProvenanceBuilder_.isEmpty()) {
            federateProvenanceBuilder_.dispose();
            federateProvenanceBuilder_ = null;
            federateProvenance_ = other.federateProvenance_;
            bitField0_ = (bitField0_ & ~0x00000020);
            federateProvenanceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFederateProvenanceFieldBuilder() : null;
          } else {
            federateProvenanceBuilder_.addAllMessages(other.federateProvenance_);
          }
        }
      }
      if (other.hasFederateHops()) {
        mergeFederateHops(other.getFederateHops());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.atakmap.Tak.BinaryBlob parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.atakmap.Tak.BinaryBlob) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
     */
    public com.atakmap.Tak.BINARY_TYPES getType() {
      com.atakmap.Tak.BINARY_TYPES result = com.atakmap.Tak.BINARY_TYPES.valueOf(type_);
      return result == null ? com.atakmap.Tak.BINARY_TYPES.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
     */
    public Builder setType(com.atakmap.Tak.BINARY_TYPES value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.atakmap.BINARY_TYPES type = 1;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    public Builder clearData() {
      
      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }

    private java.lang.Object filename_ = "";
    /**
     * <code>optional string filename = 3;</code>
     */
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filename_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string filename = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string filename = 3;</code>
     */
    public Builder setFilename(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      filename_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string filename = 3;</code>
     */
    public Builder clearFilename() {
      
      filename_ = getDefaultInstance().getFilename();
      onChanged();
      return this;
    }
    /**
     * <code>optional string filename = 3;</code>
     */
    public Builder setFilenameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      filename_ = value;
      onChanged();
      return this;
    }

    private long timestamp_ ;
    /**
     * <code>optional int64 timestamp = 4;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>optional int64 timestamp = 4;</code>
     */
    public Builder setTimestamp(long value) {
      
      timestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 timestamp = 4;</code>
     */
    public Builder clearTimestamp() {
      
      timestamp_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <code>optional string description = 5;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string description = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string description = 5;</code>
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      description_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string description = 5;</code>
     */
    public Builder clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
      onChanged();
      return this;
    }
    /**
     * <code>optional string description = 5;</code>
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      description_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.atakmap.Tak.FederateProvenance> federateProvenance_ =
      java.util.Collections.emptyList();
    private void ensureFederateProvenanceIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        federateProvenance_ = new java.util.ArrayList<com.atakmap.Tak.FederateProvenance>(federateProvenance_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.atakmap.Tak.FederateProvenance, com.atakmap.Tak.FederateProvenance.Builder, com.atakmap.Tak.FederateProvenanceOrBuilder> federateProvenanceBuilder_;

    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public java.util.List<com.atakmap.Tak.FederateProvenance> getFederateProvenanceList() {
      if (federateProvenanceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(federateProvenance_);
      } else {
        return federateProvenanceBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public int getFederateProvenanceCount() {
      if (federateProvenanceBuilder_ == null) {
        return federateProvenance_.size();
      } else {
        return federateProvenanceBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public com.atakmap.Tak.FederateProvenance getFederateProvenance(int index) {
      if (federateProvenanceBuilder_ == null) {
        return federateProvenance_.get(index);
      } else {
        return federateProvenanceBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder setFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance value) {
      if (federateProvenanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFederateProvenanceIsMutable();
        federateProvenance_.set(index, value);
        onChanged();
      } else {
        federateProvenanceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder setFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance.Builder builderForValue) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.set(index, builderForValue.build());
        onChanged();
      } else {
        federateProvenanceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder addFederateProvenance(com.atakmap.Tak.FederateProvenance value) {
      if (federateProvenanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(value);
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder addFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance value) {
      if (federateProvenanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(index, value);
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder addFederateProvenance(
        com.atakmap.Tak.FederateProvenance.Builder builderForValue) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(builderForValue.build());
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder addFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance.Builder builderForValue) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(index, builderForValue.build());
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder addAllFederateProvenance(
        java.lang.Iterable<? extends com.atakmap.Tak.FederateProvenance> values) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, federateProvenance_);
        onChanged();
      } else {
        federateProvenanceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder clearFederateProvenance() {
      if (federateProvenanceBuilder_ == null) {
        federateProvenance_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        federateProvenanceBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public Builder removeFederateProvenance(int index) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.remove(index);
        onChanged();
      } else {
        federateProvenanceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public com.atakmap.Tak.FederateProvenance.Builder getFederateProvenanceBuilder(
        int index) {
      return getFederateProvenanceFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public com.atakmap.Tak.FederateProvenanceOrBuilder getFederateProvenanceOrBuilder(
        int index) {
      if (federateProvenanceBuilder_ == null) {
        return federateProvenance_.get(index);  } else {
        return federateProvenanceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public java.util.List<? extends com.atakmap.Tak.FederateProvenanceOrBuilder> 
         getFederateProvenanceOrBuilderList() {
      if (federateProvenanceBuilder_ != null) {
        return federateProvenanceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(federateProvenance_);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public com.atakmap.Tak.FederateProvenance.Builder addFederateProvenanceBuilder() {
      return getFederateProvenanceFieldBuilder().addBuilder(
          com.atakmap.Tak.FederateProvenance.getDefaultInstance());
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public com.atakmap.Tak.FederateProvenance.Builder addFederateProvenanceBuilder(
        int index) {
      return getFederateProvenanceFieldBuilder().addBuilder(
          index, com.atakmap.Tak.FederateProvenance.getDefaultInstance());
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 6;</code>
     */
    public java.util.List<com.atakmap.Tak.FederateProvenance.Builder> 
         getFederateProvenanceBuilderList() {
      return getFederateProvenanceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.atakmap.Tak.FederateProvenance, com.atakmap.Tak.FederateProvenance.Builder, com.atakmap.Tak.FederateProvenanceOrBuilder> 
        getFederateProvenanceFieldBuilder() {
      if (federateProvenanceBuilder_ == null) {
        federateProvenanceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.atakmap.Tak.FederateProvenance, com.atakmap.Tak.FederateProvenance.Builder, com.atakmap.Tak.FederateProvenanceOrBuilder>(
                federateProvenance_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        federateProvenance_ = null;
      }
      return federateProvenanceBuilder_;
    }

    private com.atakmap.Tak.FederateHops federateHops_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.atakmap.Tak.FederateHops, com.atakmap.Tak.FederateHops.Builder, com.atakmap.Tak.FederateHopsOrBuilder> federateHopsBuilder_;
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public boolean hasFederateHops() {
      return federateHopsBuilder_ != null || federateHops_ != null;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public com.atakmap.Tak.FederateHops getFederateHops() {
      if (federateHopsBuilder_ == null) {
        return federateHops_ == null ? com.atakmap.Tak.FederateHops.getDefaultInstance() : federateHops_;
      } else {
        return federateHopsBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public Builder setFederateHops(com.atakmap.Tak.FederateHops value) {
      if (federateHopsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        federateHops_ = value;
        onChanged();
      } else {
        federateHopsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public Builder setFederateHops(
        com.atakmap.Tak.FederateHops.Builder builderForValue) {
      if (federateHopsBuilder_ == null) {
        federateHops_ = builderForValue.build();
        onChanged();
      } else {
        federateHopsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public Builder mergeFederateHops(com.atakmap.Tak.FederateHops value) {
      if (federateHopsBuilder_ == null) {
        if (federateHops_ != null) {
          federateHops_ =
            com.atakmap.Tak.FederateHops.newBuilder(federateHops_).mergeFrom(value).buildPartial();
        } else {
          federateHops_ = value;
        }
        onChanged();
      } else {
        federateHopsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public Builder clearFederateHops() {
      if (federateHopsBuilder_ == null) {
        federateHops_ = null;
        onChanged();
      } else {
        federateHops_ = null;
        federateHopsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public com.atakmap.Tak.FederateHops.Builder getFederateHopsBuilder() {
      
      onChanged();
      return getFederateHopsFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    public com.atakmap.Tak.FederateHopsOrBuilder getFederateHopsOrBuilder() {
      if (federateHopsBuilder_ != null) {
        return federateHopsBuilder_.getMessageOrBuilder();
      } else {
        return federateHops_ == null ?
            com.atakmap.Tak.FederateHops.getDefaultInstance() : federateHops_;
      }
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.atakmap.Tak.FederateHops, com.atakmap.Tak.FederateHops.Builder, com.atakmap.Tak.FederateHopsOrBuilder> 
        getFederateHopsFieldBuilder() {
      if (federateHopsBuilder_ == null) {
        federateHopsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.atakmap.Tak.FederateHops, com.atakmap.Tak.FederateHops.Builder, com.atakmap.Tak.FederateHopsOrBuilder>(
                getFederateHops(),
                getParentForChildren(),
                isClean());
        federateHops_ = null;
      }
      return federateHopsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.atakmap.BinaryBlob)
  }

  // @@protoc_insertion_point(class_scope:com.atakmap.BinaryBlob)
  private static final com.atakmap.Tak.BinaryBlob DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.atakmap.Tak.BinaryBlob();
  }

  public static com.atakmap.Tak.BinaryBlob getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BinaryBlob>
      PARSER = new com.google.protobuf.AbstractParser<BinaryBlob>() {
    public BinaryBlob parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new BinaryBlob(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BinaryBlob> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BinaryBlob> getParserForType() {
    return PARSER;
  }

  public com.atakmap.Tak.BinaryBlob getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

