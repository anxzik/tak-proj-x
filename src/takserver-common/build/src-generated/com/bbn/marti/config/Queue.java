//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.bbn.marti.config;

import java.io.Serializable;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Queue settings
 * 
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="priority" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <attribute name="levels" type="{http://www.w3.org/2001/XMLSchema}int" default="3" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *       <attribute name="pubSubCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="512" />
 *       <attribute name="outboundCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="4" />
 *       <attribute name="inboundCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="4096" />
 *       <attribute name="codecWrapperCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="2048" />
 *       <attribute name="tcpWriteQueueCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="32768" />
 *       <attribute name="disconnectOnFull" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="maxWriteQueueSize" type="{http://www.w3.org/2001/XMLSchema}int" default="2048" />
 *       <attribute name="defaultExecQueueSize" type="{http://www.w3.org/2001/XMLSchema}int" default="1024" />
 *       <attribute name="defaultMaxPoolSize" type="{http://www.w3.org/2001/XMLSchema}int" default="8" />
 *       <attribute name="defaultMaxPoolFactor" type="{http://www.w3.org/2001/XMLSchema}int" default="2" />
 *       <attribute name="messageWriteQueueSize" type="{http://www.w3.org/2001/XMLSchema}int" default="32" />
 *       <attribute name="messageWriteExecutorQueueSize" type="{http://www.w3.org/2001/XMLSchema}int" default="16384" />
 *       <attribute name="codecViewPendingCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="2048" />
 *       <attribute name="queueSizeInitial" type="{http://www.w3.org/2001/XMLSchema}int" default="1" />
 *       <attribute name="queueSizeIncrement" type="{http://www.w3.org/2001/XMLSchema}int" default="2" />
 *       <attribute name="queueSizeMaxCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="2048" />
 *       <attribute name="coreExecutorCapacity" type="{http://www.w3.org/2001/XMLSchema}int" default="32768" />
 *       <attribute name="throwOnAssertionFail" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="disconnectOnPendingExceeded" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="flushInterval" type="{http://www.w3.org/2001/XMLSchema}int" default="1000" />
 *       <attribute name="websocketSendBufferSizeLimit" type="{http://www.w3.org/2001/XMLSchema}int" default="65536" />
 *       <attribute name="websocketMaxBinaryMessageBufferSize" type="{http://www.w3.org/2001/XMLSchema}int" default="65536" />
 *       <attribute name="websocketMaxSessionIdleTimeout" type="{http://www.w3.org/2001/XMLSchema}long" default="-1" />
 *       <attribute name="websocketSendTimeoutMs" type="{http://www.w3.org/2001/XMLSchema}int" default="5000" />
 *       <attribute name="missionUidLimit" type="{http://www.w3.org/2001/XMLSchema}int" default="8192" />
 *       <attribute name="missionContentLimit" type="{http://www.w3.org/2001/XMLSchema}int" default="4096" />
 *       <attribute name="nearCacheMaxSize" type="{http://www.w3.org/2001/XMLSchema}int" default="0" />
 *       <attribute name="cotCacheMaxSize" type="{http://www.w3.org/2001/XMLSchema}int" default="0" />
 *       <attribute name="cotCacheBatchSize" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" />
 *       <attribute name="cotCacheMaxMemorySize" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" />
 *       <attribute name="springCacheMaxSize" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" />
 *       <attribute name="springCacheBatchSize" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" />
 *       <attribute name="springCacheMaxMemorySize" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" />
 *       <attribute name="springCacheSizeScalingFactor" type="{http://www.w3.org/2001/XMLSchema}int" default="8" />
 *       <attribute name="onHeapEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="cacheLastTouchedExpiryMinutes" type="{http://www.w3.org/2001/XMLSchema}int" default="10" />
 *       <attribute name="enableCacheGroup" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="enableCacheGroupPerName" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="enableGetAllMissionsCacheWarmer" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="enableIndividualHydratedMissionsCacheWarmer" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="cacheCotInRepository" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="messageTimestampCacheSizeItems" type="{http://www.w3.org/2001/XMLSchema}long" default="-1" />
 *       <attribute name="enableStoreForwardChat" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="storeForwardQueryBufferMs" type="{http://www.w3.org/2001/XMLSchema}long" default="1000" />
 *       <attribute name="storeForwardSendBufferMs" type="{http://www.w3.org/2001/XMLSchema}long" default="200" />
 *       <attribute name="enableClientEndpointCache" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="contactCacheUpdateRateLimitSeconds" type="{http://www.w3.org/2001/XMLSchema}long" default="5" />
 *       <attribute name="contactCacheRecencyLimitSeconds" type="{http://www.w3.org/2001/XMLSchema}long" default="86400" />
 *       <attribute name="pluginDatafeedCacheSeconds" type="{http://www.w3.org/2001/XMLSchema}int" default="300" />
 *       <attribute name="caffeineFileCacheSeconds" type="{http://www.w3.org/2001/XMLSchema}int" default="120" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "priority"
})
@XmlRootElement(name = "queue")
public class Queue
    implements Serializable
{

    private static final long serialVersionUID = 6107951534079953L;
    protected Queue.Priority priority;
    @XmlAttribute(name = "pubSubCapacity")
    protected Integer pubSubCapacity;
    @XmlAttribute(name = "outboundCapacity")
    protected Integer outboundCapacity;
    @XmlAttribute(name = "inboundCapacity")
    protected Integer inboundCapacity;
    @XmlAttribute(name = "codecWrapperCapacity")
    protected Integer codecWrapperCapacity;
    @XmlAttribute(name = "tcpWriteQueueCapacity")
    protected Integer tcpWriteQueueCapacity;
    @XmlAttribute(name = "disconnectOnFull")
    protected Boolean disconnectOnFull;
    @XmlAttribute(name = "maxWriteQueueSize")
    protected Integer maxWriteQueueSize;
    @XmlAttribute(name = "defaultExecQueueSize")
    protected Integer defaultExecQueueSize;
    @XmlAttribute(name = "defaultMaxPoolSize")
    protected Integer defaultMaxPoolSize;
    @XmlAttribute(name = "defaultMaxPoolFactor")
    protected Integer defaultMaxPoolFactor;
    @XmlAttribute(name = "messageWriteQueueSize")
    protected Integer messageWriteQueueSize;
    @XmlAttribute(name = "messageWriteExecutorQueueSize")
    protected Integer messageWriteExecutorQueueSize;
    @XmlAttribute(name = "codecViewPendingCapacity")
    protected Integer codecViewPendingCapacity;
    @XmlAttribute(name = "queueSizeInitial")
    protected Integer queueSizeInitial;
    @XmlAttribute(name = "queueSizeIncrement")
    protected Integer queueSizeIncrement;
    @XmlAttribute(name = "queueSizeMaxCapacity")
    protected Integer queueSizeMaxCapacity;
    @XmlAttribute(name = "coreExecutorCapacity")
    protected Integer coreExecutorCapacity;
    @XmlAttribute(name = "throwOnAssertionFail")
    protected Boolean throwOnAssertionFail;
    @XmlAttribute(name = "disconnectOnPendingExceeded")
    protected Boolean disconnectOnPendingExceeded;
    @XmlAttribute(name = "flushInterval")
    protected Integer flushInterval;
    @XmlAttribute(name = "websocketSendBufferSizeLimit")
    protected Integer websocketSendBufferSizeLimit;
    @XmlAttribute(name = "websocketMaxBinaryMessageBufferSize")
    protected Integer websocketMaxBinaryMessageBufferSize;
    @XmlAttribute(name = "websocketMaxSessionIdleTimeout")
    protected Long websocketMaxSessionIdleTimeout;
    @XmlAttribute(name = "websocketSendTimeoutMs")
    protected Integer websocketSendTimeoutMs;
    @XmlAttribute(name = "missionUidLimit")
    protected Integer missionUidLimit;
    @XmlAttribute(name = "missionContentLimit")
    protected Integer missionContentLimit;
    @XmlAttribute(name = "nearCacheMaxSize")
    protected Integer nearCacheMaxSize;
    @XmlAttribute(name = "cotCacheMaxSize")
    protected Integer cotCacheMaxSize;
    @XmlAttribute(name = "cotCacheBatchSize")
    protected Integer cotCacheBatchSize;
    @XmlAttribute(name = "cotCacheMaxMemorySize")
    protected Integer cotCacheMaxMemorySize;
    @XmlAttribute(name = "springCacheMaxSize")
    protected Integer springCacheMaxSize;
    @XmlAttribute(name = "springCacheBatchSize")
    protected Integer springCacheBatchSize;
    @XmlAttribute(name = "springCacheMaxMemorySize")
    protected Integer springCacheMaxMemorySize;
    @XmlAttribute(name = "springCacheSizeScalingFactor")
    protected Integer springCacheSizeScalingFactor;
    @XmlAttribute(name = "onHeapEnabled")
    protected Boolean onHeapEnabled;
    @XmlAttribute(name = "cacheLastTouchedExpiryMinutes")
    protected Integer cacheLastTouchedExpiryMinutes;
    @XmlAttribute(name = "enableCacheGroup")
    protected Boolean enableCacheGroup;
    @XmlAttribute(name = "enableCacheGroupPerName")
    protected Boolean enableCacheGroupPerName;
    @XmlAttribute(name = "enableGetAllMissionsCacheWarmer")
    protected Boolean enableGetAllMissionsCacheWarmer;
    @XmlAttribute(name = "enableIndividualHydratedMissionsCacheWarmer")
    protected Boolean enableIndividualHydratedMissionsCacheWarmer;
    @XmlAttribute(name = "cacheCotInRepository")
    protected Boolean cacheCotInRepository;
    @XmlAttribute(name = "messageTimestampCacheSizeItems")
    protected Long messageTimestampCacheSizeItems;
    @XmlAttribute(name = "enableStoreForwardChat")
    protected Boolean enableStoreForwardChat;
    @XmlAttribute(name = "storeForwardQueryBufferMs")
    protected Long storeForwardQueryBufferMs;
    @XmlAttribute(name = "storeForwardSendBufferMs")
    protected Long storeForwardSendBufferMs;
    @XmlAttribute(name = "enableClientEndpointCache")
    protected Boolean enableClientEndpointCache;
    @XmlAttribute(name = "contactCacheUpdateRateLimitSeconds")
    protected Long contactCacheUpdateRateLimitSeconds;
    @XmlAttribute(name = "contactCacheRecencyLimitSeconds")
    protected Long contactCacheRecencyLimitSeconds;
    @XmlAttribute(name = "pluginDatafeedCacheSeconds")
    protected Integer pluginDatafeedCacheSeconds;
    @XmlAttribute(name = "caffeineFileCacheSeconds")
    protected Integer caffeineFileCacheSeconds;

    /**
     * Gets the value of the priority property.
     * 
     * @return
     *     possible object is
     *     {@link Queue.Priority }
     *     
     */
    public Queue.Priority getPriority() {
        return priority;
    }

    /**
     * Sets the value of the priority property.
     * 
     * @param value
     *     allowed object is
     *     {@link Queue.Priority }
     *     
     */
    public void setPriority(Queue.Priority value) {
        this.priority = value;
    }

    /**
     * Gets the value of the pubSubCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getPubSubCapacity() {
        if (pubSubCapacity == null) {
            return  512;
        } else {
            return pubSubCapacity;
        }
    }

    /**
     * Sets the value of the pubSubCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPubSubCapacity(Integer value) {
        this.pubSubCapacity = value;
    }

    /**
     * Gets the value of the outboundCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getOutboundCapacity() {
        if (outboundCapacity == null) {
            return  4;
        } else {
            return outboundCapacity;
        }
    }

    /**
     * Sets the value of the outboundCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setOutboundCapacity(Integer value) {
        this.outboundCapacity = value;
    }

    /**
     * Gets the value of the inboundCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getInboundCapacity() {
        if (inboundCapacity == null) {
            return  4096;
        } else {
            return inboundCapacity;
        }
    }

    /**
     * Sets the value of the inboundCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setInboundCapacity(Integer value) {
        this.inboundCapacity = value;
    }

    /**
     * Gets the value of the codecWrapperCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCodecWrapperCapacity() {
        if (codecWrapperCapacity == null) {
            return  2048;
        } else {
            return codecWrapperCapacity;
        }
    }

    /**
     * Sets the value of the codecWrapperCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCodecWrapperCapacity(Integer value) {
        this.codecWrapperCapacity = value;
    }

    /**
     * Gets the value of the tcpWriteQueueCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getTcpWriteQueueCapacity() {
        if (tcpWriteQueueCapacity == null) {
            return  32768;
        } else {
            return tcpWriteQueueCapacity;
        }
    }

    /**
     * Sets the value of the tcpWriteQueueCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTcpWriteQueueCapacity(Integer value) {
        this.tcpWriteQueueCapacity = value;
    }

    /**
     * Gets the value of the disconnectOnFull property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isDisconnectOnFull() {
        if (disconnectOnFull == null) {
            return false;
        } else {
            return disconnectOnFull;
        }
    }

    /**
     * Sets the value of the disconnectOnFull property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDisconnectOnFull(Boolean value) {
        this.disconnectOnFull = value;
    }

    /**
     * Gets the value of the maxWriteQueueSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMaxWriteQueueSize() {
        if (maxWriteQueueSize == null) {
            return  2048;
        } else {
            return maxWriteQueueSize;
        }
    }

    /**
     * Sets the value of the maxWriteQueueSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxWriteQueueSize(Integer value) {
        this.maxWriteQueueSize = value;
    }

    /**
     * Gets the value of the defaultExecQueueSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getDefaultExecQueueSize() {
        if (defaultExecQueueSize == null) {
            return  1024;
        } else {
            return defaultExecQueueSize;
        }
    }

    /**
     * Sets the value of the defaultExecQueueSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDefaultExecQueueSize(Integer value) {
        this.defaultExecQueueSize = value;
    }

    /**
     * Gets the value of the defaultMaxPoolSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getDefaultMaxPoolSize() {
        if (defaultMaxPoolSize == null) {
            return  8;
        } else {
            return defaultMaxPoolSize;
        }
    }

    /**
     * Sets the value of the defaultMaxPoolSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDefaultMaxPoolSize(Integer value) {
        this.defaultMaxPoolSize = value;
    }

    /**
     * Gets the value of the defaultMaxPoolFactor property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getDefaultMaxPoolFactor() {
        if (defaultMaxPoolFactor == null) {
            return  2;
        } else {
            return defaultMaxPoolFactor;
        }
    }

    /**
     * Sets the value of the defaultMaxPoolFactor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDefaultMaxPoolFactor(Integer value) {
        this.defaultMaxPoolFactor = value;
    }

    /**
     * Gets the value of the messageWriteQueueSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMessageWriteQueueSize() {
        if (messageWriteQueueSize == null) {
            return  32;
        } else {
            return messageWriteQueueSize;
        }
    }

    /**
     * Sets the value of the messageWriteQueueSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMessageWriteQueueSize(Integer value) {
        this.messageWriteQueueSize = value;
    }

    /**
     * Gets the value of the messageWriteExecutorQueueSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMessageWriteExecutorQueueSize() {
        if (messageWriteExecutorQueueSize == null) {
            return  16384;
        } else {
            return messageWriteExecutorQueueSize;
        }
    }

    /**
     * Sets the value of the messageWriteExecutorQueueSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMessageWriteExecutorQueueSize(Integer value) {
        this.messageWriteExecutorQueueSize = value;
    }

    /**
     * Gets the value of the codecViewPendingCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCodecViewPendingCapacity() {
        if (codecViewPendingCapacity == null) {
            return  2048;
        } else {
            return codecViewPendingCapacity;
        }
    }

    /**
     * Sets the value of the codecViewPendingCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCodecViewPendingCapacity(Integer value) {
        this.codecViewPendingCapacity = value;
    }

    /**
     * Gets the value of the queueSizeInitial property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getQueueSizeInitial() {
        if (queueSizeInitial == null) {
            return  1;
        } else {
            return queueSizeInitial;
        }
    }

    /**
     * Sets the value of the queueSizeInitial property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setQueueSizeInitial(Integer value) {
        this.queueSizeInitial = value;
    }

    /**
     * Gets the value of the queueSizeIncrement property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getQueueSizeIncrement() {
        if (queueSizeIncrement == null) {
            return  2;
        } else {
            return queueSizeIncrement;
        }
    }

    /**
     * Sets the value of the queueSizeIncrement property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setQueueSizeIncrement(Integer value) {
        this.queueSizeIncrement = value;
    }

    /**
     * Gets the value of the queueSizeMaxCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getQueueSizeMaxCapacity() {
        if (queueSizeMaxCapacity == null) {
            return  2048;
        } else {
            return queueSizeMaxCapacity;
        }
    }

    /**
     * Sets the value of the queueSizeMaxCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setQueueSizeMaxCapacity(Integer value) {
        this.queueSizeMaxCapacity = value;
    }

    /**
     * Gets the value of the coreExecutorCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCoreExecutorCapacity() {
        if (coreExecutorCapacity == null) {
            return  32768;
        } else {
            return coreExecutorCapacity;
        }
    }

    /**
     * Sets the value of the coreExecutorCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCoreExecutorCapacity(Integer value) {
        this.coreExecutorCapacity = value;
    }

    /**
     * Gets the value of the throwOnAssertionFail property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isThrowOnAssertionFail() {
        if (throwOnAssertionFail == null) {
            return false;
        } else {
            return throwOnAssertionFail;
        }
    }

    /**
     * Sets the value of the throwOnAssertionFail property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setThrowOnAssertionFail(Boolean value) {
        this.throwOnAssertionFail = value;
    }

    /**
     * Gets the value of the disconnectOnPendingExceeded property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isDisconnectOnPendingExceeded() {
        if (disconnectOnPendingExceeded == null) {
            return true;
        } else {
            return disconnectOnPendingExceeded;
        }
    }

    /**
     * Sets the value of the disconnectOnPendingExceeded property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDisconnectOnPendingExceeded(Boolean value) {
        this.disconnectOnPendingExceeded = value;
    }

    /**
     * Gets the value of the flushInterval property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getFlushInterval() {
        if (flushInterval == null) {
            return  1000;
        } else {
            return flushInterval;
        }
    }

    /**
     * Sets the value of the flushInterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setFlushInterval(Integer value) {
        this.flushInterval = value;
    }

    /**
     * Gets the value of the websocketSendBufferSizeLimit property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getWebsocketSendBufferSizeLimit() {
        if (websocketSendBufferSizeLimit == null) {
            return  65536;
        } else {
            return websocketSendBufferSizeLimit;
        }
    }

    /**
     * Sets the value of the websocketSendBufferSizeLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setWebsocketSendBufferSizeLimit(Integer value) {
        this.websocketSendBufferSizeLimit = value;
    }

    /**
     * Gets the value of the websocketMaxBinaryMessageBufferSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getWebsocketMaxBinaryMessageBufferSize() {
        if (websocketMaxBinaryMessageBufferSize == null) {
            return  65536;
        } else {
            return websocketMaxBinaryMessageBufferSize;
        }
    }

    /**
     * Sets the value of the websocketMaxBinaryMessageBufferSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setWebsocketMaxBinaryMessageBufferSize(Integer value) {
        this.websocketMaxBinaryMessageBufferSize = value;
    }

    /**
     * Gets the value of the websocketMaxSessionIdleTimeout property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getWebsocketMaxSessionIdleTimeout() {
        if (websocketMaxSessionIdleTimeout == null) {
            return -1L;
        } else {
            return websocketMaxSessionIdleTimeout;
        }
    }

    /**
     * Sets the value of the websocketMaxSessionIdleTimeout property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setWebsocketMaxSessionIdleTimeout(Long value) {
        this.websocketMaxSessionIdleTimeout = value;
    }

    /**
     * Gets the value of the websocketSendTimeoutMs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getWebsocketSendTimeoutMs() {
        if (websocketSendTimeoutMs == null) {
            return  5000;
        } else {
            return websocketSendTimeoutMs;
        }
    }

    /**
     * Sets the value of the websocketSendTimeoutMs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setWebsocketSendTimeoutMs(Integer value) {
        this.websocketSendTimeoutMs = value;
    }

    /**
     * Gets the value of the missionUidLimit property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMissionUidLimit() {
        if (missionUidLimit == null) {
            return  8192;
        } else {
            return missionUidLimit;
        }
    }

    /**
     * Sets the value of the missionUidLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMissionUidLimit(Integer value) {
        this.missionUidLimit = value;
    }

    /**
     * Gets the value of the missionContentLimit property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMissionContentLimit() {
        if (missionContentLimit == null) {
            return  4096;
        } else {
            return missionContentLimit;
        }
    }

    /**
     * Sets the value of the missionContentLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMissionContentLimit(Integer value) {
        this.missionContentLimit = value;
    }

    /**
     * Gets the value of the nearCacheMaxSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNearCacheMaxSize() {
        if (nearCacheMaxSize == null) {
            return  0;
        } else {
            return nearCacheMaxSize;
        }
    }

    /**
     * Sets the value of the nearCacheMaxSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNearCacheMaxSize(Integer value) {
        this.nearCacheMaxSize = value;
    }

    /**
     * Gets the value of the cotCacheMaxSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCotCacheMaxSize() {
        if (cotCacheMaxSize == null) {
            return  0;
        } else {
            return cotCacheMaxSize;
        }
    }

    /**
     * Sets the value of the cotCacheMaxSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCotCacheMaxSize(Integer value) {
        this.cotCacheMaxSize = value;
    }

    /**
     * Gets the value of the cotCacheBatchSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCotCacheBatchSize() {
        if (cotCacheBatchSize == null) {
            return -1;
        } else {
            return cotCacheBatchSize;
        }
    }

    /**
     * Sets the value of the cotCacheBatchSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCotCacheBatchSize(Integer value) {
        this.cotCacheBatchSize = value;
    }

    /**
     * Gets the value of the cotCacheMaxMemorySize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCotCacheMaxMemorySize() {
        if (cotCacheMaxMemorySize == null) {
            return -1;
        } else {
            return cotCacheMaxMemorySize;
        }
    }

    /**
     * Sets the value of the cotCacheMaxMemorySize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCotCacheMaxMemorySize(Integer value) {
        this.cotCacheMaxMemorySize = value;
    }

    /**
     * Gets the value of the springCacheMaxSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getSpringCacheMaxSize() {
        if (springCacheMaxSize == null) {
            return -1;
        } else {
            return springCacheMaxSize;
        }
    }

    /**
     * Sets the value of the springCacheMaxSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSpringCacheMaxSize(Integer value) {
        this.springCacheMaxSize = value;
    }

    /**
     * Gets the value of the springCacheBatchSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getSpringCacheBatchSize() {
        if (springCacheBatchSize == null) {
            return -1;
        } else {
            return springCacheBatchSize;
        }
    }

    /**
     * Sets the value of the springCacheBatchSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSpringCacheBatchSize(Integer value) {
        this.springCacheBatchSize = value;
    }

    /**
     * Gets the value of the springCacheMaxMemorySize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getSpringCacheMaxMemorySize() {
        if (springCacheMaxMemorySize == null) {
            return -1;
        } else {
            return springCacheMaxMemorySize;
        }
    }

    /**
     * Sets the value of the springCacheMaxMemorySize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSpringCacheMaxMemorySize(Integer value) {
        this.springCacheMaxMemorySize = value;
    }

    /**
     * Gets the value of the springCacheSizeScalingFactor property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getSpringCacheSizeScalingFactor() {
        if (springCacheSizeScalingFactor == null) {
            return  8;
        } else {
            return springCacheSizeScalingFactor;
        }
    }

    /**
     * Sets the value of the springCacheSizeScalingFactor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSpringCacheSizeScalingFactor(Integer value) {
        this.springCacheSizeScalingFactor = value;
    }

    /**
     * Gets the value of the onHeapEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isOnHeapEnabled() {
        if (onHeapEnabled == null) {
            return false;
        } else {
            return onHeapEnabled;
        }
    }

    /**
     * Sets the value of the onHeapEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOnHeapEnabled(Boolean value) {
        this.onHeapEnabled = value;
    }

    /**
     * Gets the value of the cacheLastTouchedExpiryMinutes property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCacheLastTouchedExpiryMinutes() {
        if (cacheLastTouchedExpiryMinutes == null) {
            return  10;
        } else {
            return cacheLastTouchedExpiryMinutes;
        }
    }

    /**
     * Sets the value of the cacheLastTouchedExpiryMinutes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCacheLastTouchedExpiryMinutes(Integer value) {
        this.cacheLastTouchedExpiryMinutes = value;
    }

    /**
     * Gets the value of the enableCacheGroup property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableCacheGroup() {
        if (enableCacheGroup == null) {
            return true;
        } else {
            return enableCacheGroup;
        }
    }

    /**
     * Sets the value of the enableCacheGroup property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableCacheGroup(Boolean value) {
        this.enableCacheGroup = value;
    }

    /**
     * Gets the value of the enableCacheGroupPerName property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableCacheGroupPerName() {
        if (enableCacheGroupPerName == null) {
            return false;
        } else {
            return enableCacheGroupPerName;
        }
    }

    /**
     * Sets the value of the enableCacheGroupPerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableCacheGroupPerName(Boolean value) {
        this.enableCacheGroupPerName = value;
    }

    /**
     * Gets the value of the enableGetAllMissionsCacheWarmer property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableGetAllMissionsCacheWarmer() {
        if (enableGetAllMissionsCacheWarmer == null) {
            return true;
        } else {
            return enableGetAllMissionsCacheWarmer;
        }
    }

    /**
     * Sets the value of the enableGetAllMissionsCacheWarmer property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableGetAllMissionsCacheWarmer(Boolean value) {
        this.enableGetAllMissionsCacheWarmer = value;
    }

    /**
     * Gets the value of the enableIndividualHydratedMissionsCacheWarmer property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableIndividualHydratedMissionsCacheWarmer() {
        if (enableIndividualHydratedMissionsCacheWarmer == null) {
            return false;
        } else {
            return enableIndividualHydratedMissionsCacheWarmer;
        }
    }

    /**
     * Sets the value of the enableIndividualHydratedMissionsCacheWarmer property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableIndividualHydratedMissionsCacheWarmer(Boolean value) {
        this.enableIndividualHydratedMissionsCacheWarmer = value;
    }

    /**
     * Gets the value of the cacheCotInRepository property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isCacheCotInRepository() {
        if (cacheCotInRepository == null) {
            return false;
        } else {
            return cacheCotInRepository;
        }
    }

    /**
     * Sets the value of the cacheCotInRepository property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCacheCotInRepository(Boolean value) {
        this.cacheCotInRepository = value;
    }

    /**
     * Gets the value of the messageTimestampCacheSizeItems property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getMessageTimestampCacheSizeItems() {
        if (messageTimestampCacheSizeItems == null) {
            return -1L;
        } else {
            return messageTimestampCacheSizeItems;
        }
    }

    /**
     * Sets the value of the messageTimestampCacheSizeItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setMessageTimestampCacheSizeItems(Long value) {
        this.messageTimestampCacheSizeItems = value;
    }

    /**
     * Gets the value of the enableStoreForwardChat property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableStoreForwardChat() {
        if (enableStoreForwardChat == null) {
            return false;
        } else {
            return enableStoreForwardChat;
        }
    }

    /**
     * Sets the value of the enableStoreForwardChat property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableStoreForwardChat(Boolean value) {
        this.enableStoreForwardChat = value;
    }

    /**
     * Gets the value of the storeForwardQueryBufferMs property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getStoreForwardQueryBufferMs() {
        if (storeForwardQueryBufferMs == null) {
            return  1000L;
        } else {
            return storeForwardQueryBufferMs;
        }
    }

    /**
     * Sets the value of the storeForwardQueryBufferMs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setStoreForwardQueryBufferMs(Long value) {
        this.storeForwardQueryBufferMs = value;
    }

    /**
     * Gets the value of the storeForwardSendBufferMs property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getStoreForwardSendBufferMs() {
        if (storeForwardSendBufferMs == null) {
            return  200L;
        } else {
            return storeForwardSendBufferMs;
        }
    }

    /**
     * Sets the value of the storeForwardSendBufferMs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setStoreForwardSendBufferMs(Long value) {
        this.storeForwardSendBufferMs = value;
    }

    /**
     * Gets the value of the enableClientEndpointCache property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableClientEndpointCache() {
        if (enableClientEndpointCache == null) {
            return true;
        } else {
            return enableClientEndpointCache;
        }
    }

    /**
     * Sets the value of the enableClientEndpointCache property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableClientEndpointCache(Boolean value) {
        this.enableClientEndpointCache = value;
    }

    /**
     * Gets the value of the contactCacheUpdateRateLimitSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getContactCacheUpdateRateLimitSeconds() {
        if (contactCacheUpdateRateLimitSeconds == null) {
            return  5L;
        } else {
            return contactCacheUpdateRateLimitSeconds;
        }
    }

    /**
     * Sets the value of the contactCacheUpdateRateLimitSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setContactCacheUpdateRateLimitSeconds(Long value) {
        this.contactCacheUpdateRateLimitSeconds = value;
    }

    /**
     * Gets the value of the contactCacheRecencyLimitSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getContactCacheRecencyLimitSeconds() {
        if (contactCacheRecencyLimitSeconds == null) {
            return  86400L;
        } else {
            return contactCacheRecencyLimitSeconds;
        }
    }

    /**
     * Sets the value of the contactCacheRecencyLimitSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setContactCacheRecencyLimitSeconds(Long value) {
        this.contactCacheRecencyLimitSeconds = value;
    }

    /**
     * Gets the value of the pluginDatafeedCacheSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getPluginDatafeedCacheSeconds() {
        if (pluginDatafeedCacheSeconds == null) {
            return  300;
        } else {
            return pluginDatafeedCacheSeconds;
        }
    }

    /**
     * Sets the value of the pluginDatafeedCacheSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPluginDatafeedCacheSeconds(Integer value) {
        this.pluginDatafeedCacheSeconds = value;
    }

    /**
     * Gets the value of the caffeineFileCacheSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCaffeineFileCacheSeconds() {
        if (caffeineFileCacheSeconds == null) {
            return  120;
        } else {
            return caffeineFileCacheSeconds;
        }
    }

    /**
     * Sets the value of the caffeineFileCacheSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCaffeineFileCacheSeconds(Integer value) {
        this.caffeineFileCacheSeconds = value;
    }


    /**
     * Priority
     * 
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <attribute name="levels" type="{http://www.w3.org/2001/XMLSchema}int" default="3" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Priority
        implements Serializable
    {

        private static final long serialVersionUID = 6107951534079953L;
        @XmlAttribute(name = "levels")
        protected Integer levels;

        /**
         * Gets the value of the levels property.
         * 
         * @return
         *     possible object is
         *     {@link Integer }
         *     
         */
        public int getLevels() {
            if (levels == null) {
                return  3;
            } else {
                return levels;
            }
        }

        /**
         * Sets the value of the levels property.
         * 
         * @param value
         *     allowed object is
         *     {@link Integer }
         *     
         */
        public void setLevels(Integer value) {
            this.levels = value;
        }

    }

}
