// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fig.proto

package com.atakmap.Tak;

/**
 * Protobuf type {@code com.atakmap.FederateGroups}
 */
public  final class FederateGroups extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.atakmap.FederateGroups)
    FederateGroupsOrBuilder {
  // Use FederateGroups.newBuilder() to construct.
  private FederateGroups(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FederateGroups() {
    federateGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    federateProvenance_ = java.util.Collections.emptyList();
    nestedGroups_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private FederateGroups(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.atakmap.Tak.ServerHealth.Builder subBuilder = null;
            if (streamUpdate_ != null) {
              subBuilder = streamUpdate_.toBuilder();
            }
            streamUpdate_ = input.readMessage(com.atakmap.Tak.ServerHealth.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(streamUpdate_);
              streamUpdate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              federateGroups_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            federateGroups_.add(s);
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              federateProvenance_ = new java.util.ArrayList<com.atakmap.Tak.FederateProvenance>();
              mutable_bitField0_ |= 0x00000004;
            }
            federateProvenance_.add(
                input.readMessage(com.atakmap.Tak.FederateProvenance.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.atakmap.Tak.FederateHops.Builder subBuilder = null;
            if (federateHops_ != null) {
              subBuilder = federateHops_.toBuilder();
            }
            federateHops_ = input.readMessage(com.atakmap.Tak.FederateHops.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(federateHops_);
              federateHops_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              nestedGroups_ = new java.util.ArrayList<com.atakmap.Tak.FederateGroups>();
              mutable_bitField0_ |= 0x00000010;
            }
            nestedGroups_.add(
                input.readMessage(com.atakmap.Tak.FederateGroups.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        federateGroups_ = federateGroups_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        federateProvenance_ = java.util.Collections.unmodifiableList(federateProvenance_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        nestedGroups_ = java.util.Collections.unmodifiableList(nestedGroups_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.atakmap.Tak.FigProto.internal_static_com_atakmap_FederateGroups_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.atakmap.Tak.FigProto.internal_static_com_atakmap_FederateGroups_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.atakmap.Tak.FederateGroups.class, com.atakmap.Tak.FederateGroups.Builder.class);
  }

  private int bitField0_;
  public static final int STREAMUPDATE_FIELD_NUMBER = 1;
  private com.atakmap.Tak.ServerHealth streamUpdate_;
  /**
   * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
   */
  public boolean hasStreamUpdate() {
    return streamUpdate_ != null;
  }
  /**
   * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
   */
  public com.atakmap.Tak.ServerHealth getStreamUpdate() {
    return streamUpdate_ == null ? com.atakmap.Tak.ServerHealth.getDefaultInstance() : streamUpdate_;
  }
  /**
   * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
   */
  public com.atakmap.Tak.ServerHealthOrBuilder getStreamUpdateOrBuilder() {
    return getStreamUpdate();
  }

  public static final int FEDERATEGROUPS_FIELD_NUMBER = 2;
  private com.google.protobuf.LazyStringList federateGroups_;
  /**
   * <code>repeated string federateGroups = 2;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getFederateGroupsList() {
    return federateGroups_;
  }
  /**
   * <code>repeated string federateGroups = 2;</code>
   */
  public int getFederateGroupsCount() {
    return federateGroups_.size();
  }
  /**
   * <code>repeated string federateGroups = 2;</code>
   */
  public java.lang.String getFederateGroups(int index) {
    return federateGroups_.get(index);
  }
  /**
   * <code>repeated string federateGroups = 2;</code>
   */
  public com.google.protobuf.ByteString
      getFederateGroupsBytes(int index) {
    return federateGroups_.getByteString(index);
  }

  public static final int FEDERATEPROVENANCE_FIELD_NUMBER = 3;
  private java.util.List<com.atakmap.Tak.FederateProvenance> federateProvenance_;
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
   */
  public java.util.List<com.atakmap.Tak.FederateProvenance> getFederateProvenanceList() {
    return federateProvenance_;
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
   */
  public java.util.List<? extends com.atakmap.Tak.FederateProvenanceOrBuilder> 
      getFederateProvenanceOrBuilderList() {
    return federateProvenance_;
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
   */
  public int getFederateProvenanceCount() {
    return federateProvenance_.size();
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
   */
  public com.atakmap.Tak.FederateProvenance getFederateProvenance(int index) {
    return federateProvenance_.get(index);
  }
  /**
   * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
   */
  public com.atakmap.Tak.FederateProvenanceOrBuilder getFederateProvenanceOrBuilder(
      int index) {
    return federateProvenance_.get(index);
  }

  public static final int FEDERATEHOPS_FIELD_NUMBER = 4;
  private com.atakmap.Tak.FederateHops federateHops_;
  /**
   * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
   */
  public boolean hasFederateHops() {
    return federateHops_ != null;
  }
  /**
   * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
   */
  public com.atakmap.Tak.FederateHops getFederateHops() {
    return federateHops_ == null ? com.atakmap.Tak.FederateHops.getDefaultInstance() : federateHops_;
  }
  /**
   * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
   */
  public com.atakmap.Tak.FederateHopsOrBuilder getFederateHopsOrBuilder() {
    return getFederateHops();
  }

  public static final int NESTEDGROUPS_FIELD_NUMBER = 5;
  private java.util.List<com.atakmap.Tak.FederateGroups> nestedGroups_;
  /**
   * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
   */
  public java.util.List<com.atakmap.Tak.FederateGroups> getNestedGroupsList() {
    return nestedGroups_;
  }
  /**
   * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
   */
  public java.util.List<? extends com.atakmap.Tak.FederateGroupsOrBuilder> 
      getNestedGroupsOrBuilderList() {
    return nestedGroups_;
  }
  /**
   * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
   */
  public int getNestedGroupsCount() {
    return nestedGroups_.size();
  }
  /**
   * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
   */
  public com.atakmap.Tak.FederateGroups getNestedGroups(int index) {
    return nestedGroups_.get(index);
  }
  /**
   * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
   */
  public com.atakmap.Tak.FederateGroupsOrBuilder getNestedGroupsOrBuilder(
      int index) {
    return nestedGroups_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (streamUpdate_ != null) {
      output.writeMessage(1, getStreamUpdate());
    }
    for (int i = 0; i < federateGroups_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, federateGroups_.getRaw(i));
    }
    for (int i = 0; i < federateProvenance_.size(); i++) {
      output.writeMessage(3, federateProvenance_.get(i));
    }
    if (federateHops_ != null) {
      output.writeMessage(4, getFederateHops());
    }
    for (int i = 0; i < nestedGroups_.size(); i++) {
      output.writeMessage(5, nestedGroups_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (streamUpdate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStreamUpdate());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < federateGroups_.size(); i++) {
        dataSize += computeStringSizeNoTag(federateGroups_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFederateGroupsList().size();
    }
    for (int i = 0; i < federateProvenance_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, federateProvenance_.get(i));
    }
    if (federateHops_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getFederateHops());
    }
    for (int i = 0; i < nestedGroups_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, nestedGroups_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.atakmap.Tak.FederateGroups)) {
      return super.equals(obj);
    }
    com.atakmap.Tak.FederateGroups other = (com.atakmap.Tak.FederateGroups) obj;

    boolean result = true;
    result = result && (hasStreamUpdate() == other.hasStreamUpdate());
    if (hasStreamUpdate()) {
      result = result && getStreamUpdate()
          .equals(other.getStreamUpdate());
    }
    result = result && getFederateGroupsList()
        .equals(other.getFederateGroupsList());
    result = result && getFederateProvenanceList()
        .equals(other.getFederateProvenanceList());
    result = result && (hasFederateHops() == other.hasFederateHops());
    if (hasFederateHops()) {
      result = result && getFederateHops()
          .equals(other.getFederateHops());
    }
    result = result && getNestedGroupsList()
        .equals(other.getNestedGroupsList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasStreamUpdate()) {
      hash = (37 * hash) + STREAMUPDATE_FIELD_NUMBER;
      hash = (53 * hash) + getStreamUpdate().hashCode();
    }
    if (getFederateGroupsCount() > 0) {
      hash = (37 * hash) + FEDERATEGROUPS_FIELD_NUMBER;
      hash = (53 * hash) + getFederateGroupsList().hashCode();
    }
    if (getFederateProvenanceCount() > 0) {
      hash = (37 * hash) + FEDERATEPROVENANCE_FIELD_NUMBER;
      hash = (53 * hash) + getFederateProvenanceList().hashCode();
    }
    if (hasFederateHops()) {
      hash = (37 * hash) + FEDERATEHOPS_FIELD_NUMBER;
      hash = (53 * hash) + getFederateHops().hashCode();
    }
    if (getNestedGroupsCount() > 0) {
      hash = (37 * hash) + NESTEDGROUPS_FIELD_NUMBER;
      hash = (53 * hash) + getNestedGroupsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.atakmap.Tak.FederateGroups parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.atakmap.Tak.FederateGroups parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.atakmap.Tak.FederateGroups parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.atakmap.Tak.FederateGroups parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.atakmap.Tak.FederateGroups prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.atakmap.FederateGroups}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.atakmap.FederateGroups)
      com.atakmap.Tak.FederateGroupsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.atakmap.Tak.FigProto.internal_static_com_atakmap_FederateGroups_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.atakmap.Tak.FigProto.internal_static_com_atakmap_FederateGroups_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.atakmap.Tak.FederateGroups.class, com.atakmap.Tak.FederateGroups.Builder.class);
    }

    // Construct using com.atakmap.Tak.FederateGroups.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFederateProvenanceFieldBuilder();
        getNestedGroupsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (streamUpdateBuilder_ == null) {
        streamUpdate_ = null;
      } else {
        streamUpdate_ = null;
        streamUpdateBuilder_ = null;
      }
      federateGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (federateProvenanceBuilder_ == null) {
        federateProvenance_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        federateProvenanceBuilder_.clear();
      }
      if (federateHopsBuilder_ == null) {
        federateHops_ = null;
      } else {
        federateHops_ = null;
        federateHopsBuilder_ = null;
      }
      if (nestedGroupsBuilder_ == null) {
        nestedGroups_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        nestedGroupsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.atakmap.Tak.FigProto.internal_static_com_atakmap_FederateGroups_descriptor;
    }

    public com.atakmap.Tak.FederateGroups getDefaultInstanceForType() {
      return com.atakmap.Tak.FederateGroups.getDefaultInstance();
    }

    public com.atakmap.Tak.FederateGroups build() {
      com.atakmap.Tak.FederateGroups result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.atakmap.Tak.FederateGroups buildPartial() {
      com.atakmap.Tak.FederateGroups result = new com.atakmap.Tak.FederateGroups(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (streamUpdateBuilder_ == null) {
        result.streamUpdate_ = streamUpdate_;
      } else {
        result.streamUpdate_ = streamUpdateBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        federateGroups_ = federateGroups_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.federateGroups_ = federateGroups_;
      if (federateProvenanceBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          federateProvenance_ = java.util.Collections.unmodifiableList(federateProvenance_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.federateProvenance_ = federateProvenance_;
      } else {
        result.federateProvenance_ = federateProvenanceBuilder_.build();
      }
      if (federateHopsBuilder_ == null) {
        result.federateHops_ = federateHops_;
      } else {
        result.federateHops_ = federateHopsBuilder_.build();
      }
      if (nestedGroupsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          nestedGroups_ = java.util.Collections.unmodifiableList(nestedGroups_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.nestedGroups_ = nestedGroups_;
      } else {
        result.nestedGroups_ = nestedGroupsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.atakmap.Tak.FederateGroups) {
        return mergeFrom((com.atakmap.Tak.FederateGroups)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.atakmap.Tak.FederateGroups other) {
      if (other == com.atakmap.Tak.FederateGroups.getDefaultInstance()) return this;
      if (other.hasStreamUpdate()) {
        mergeStreamUpdate(other.getStreamUpdate());
      }
      if (!other.federateGroups_.isEmpty()) {
        if (federateGroups_.isEmpty()) {
          federateGroups_ = other.federateGroups_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureFederateGroupsIsMutable();
          federateGroups_.addAll(other.federateGroups_);
        }
        onChanged();
      }
      if (federateProvenanceBuilder_ == null) {
        if (!other.federateProvenance_.isEmpty()) {
          if (federateProvenance_.isEmpty()) {
            federateProvenance_ = other.federateProvenance_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFederateProvenanceIsMutable();
            federateProvenance_.addAll(other.federateProvenance_);
          }
          onChanged();
        }
      } else {
        if (!other.federateProvenance_.isEmpty()) {
          if (federateProvenanceBuilder_.isEmpty()) {
            federateProvenanceBuilder_.dispose();
            federateProvenanceBuilder_ = null;
            federateProvenance_ = other.federateProvenance_;
            bitField0_ = (bitField0_ & ~0x00000004);
            federateProvenanceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFederateProvenanceFieldBuilder() : null;
          } else {
            federateProvenanceBuilder_.addAllMessages(other.federateProvenance_);
          }
        }
      }
      if (other.hasFederateHops()) {
        mergeFederateHops(other.getFederateHops());
      }
      if (nestedGroupsBuilder_ == null) {
        if (!other.nestedGroups_.isEmpty()) {
          if (nestedGroups_.isEmpty()) {
            nestedGroups_ = other.nestedGroups_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureNestedGroupsIsMutable();
            nestedGroups_.addAll(other.nestedGroups_);
          }
          onChanged();
        }
      } else {
        if (!other.nestedGroups_.isEmpty()) {
          if (nestedGroupsBuilder_.isEmpty()) {
            nestedGroupsBuilder_.dispose();
            nestedGroupsBuilder_ = null;
            nestedGroups_ = other.nestedGroups_;
            bitField0_ = (bitField0_ & ~0x00000010);
            nestedGroupsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNestedGroupsFieldBuilder() : null;
          } else {
            nestedGroupsBuilder_.addAllMessages(other.nestedGroups_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.atakmap.Tak.FederateGroups parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.atakmap.Tak.FederateGroups) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.atakmap.Tak.ServerHealth streamUpdate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.atakmap.Tak.ServerHealth, com.atakmap.Tak.ServerHealth.Builder, com.atakmap.Tak.ServerHealthOrBuilder> streamUpdateBuilder_;
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public boolean hasStreamUpdate() {
      return streamUpdateBuilder_ != null || streamUpdate_ != null;
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public com.atakmap.Tak.ServerHealth getStreamUpdate() {
      if (streamUpdateBuilder_ == null) {
        return streamUpdate_ == null ? com.atakmap.Tak.ServerHealth.getDefaultInstance() : streamUpdate_;
      } else {
        return streamUpdateBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public Builder setStreamUpdate(com.atakmap.Tak.ServerHealth value) {
      if (streamUpdateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamUpdate_ = value;
        onChanged();
      } else {
        streamUpdateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public Builder setStreamUpdate(
        com.atakmap.Tak.ServerHealth.Builder builderForValue) {
      if (streamUpdateBuilder_ == null) {
        streamUpdate_ = builderForValue.build();
        onChanged();
      } else {
        streamUpdateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public Builder mergeStreamUpdate(com.atakmap.Tak.ServerHealth value) {
      if (streamUpdateBuilder_ == null) {
        if (streamUpdate_ != null) {
          streamUpdate_ =
            com.atakmap.Tak.ServerHealth.newBuilder(streamUpdate_).mergeFrom(value).buildPartial();
        } else {
          streamUpdate_ = value;
        }
        onChanged();
      } else {
        streamUpdateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public Builder clearStreamUpdate() {
      if (streamUpdateBuilder_ == null) {
        streamUpdate_ = null;
        onChanged();
      } else {
        streamUpdate_ = null;
        streamUpdateBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public com.atakmap.Tak.ServerHealth.Builder getStreamUpdateBuilder() {
      
      onChanged();
      return getStreamUpdateFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    public com.atakmap.Tak.ServerHealthOrBuilder getStreamUpdateOrBuilder() {
      if (streamUpdateBuilder_ != null) {
        return streamUpdateBuilder_.getMessageOrBuilder();
      } else {
        return streamUpdate_ == null ?
            com.atakmap.Tak.ServerHealth.getDefaultInstance() : streamUpdate_;
      }
    }
    /**
     * <code>optional .com.atakmap.ServerHealth streamUpdate = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.atakmap.Tak.ServerHealth, com.atakmap.Tak.ServerHealth.Builder, com.atakmap.Tak.ServerHealthOrBuilder> 
        getStreamUpdateFieldBuilder() {
      if (streamUpdateBuilder_ == null) {
        streamUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.atakmap.Tak.ServerHealth, com.atakmap.Tak.ServerHealth.Builder, com.atakmap.Tak.ServerHealthOrBuilder>(
                getStreamUpdate(),
                getParentForChildren(),
                isClean());
        streamUpdate_ = null;
      }
      return streamUpdateBuilder_;
    }

    private com.google.protobuf.LazyStringList federateGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureFederateGroupsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        federateGroups_ = new com.google.protobuf.LazyStringArrayList(federateGroups_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getFederateGroupsList() {
      return federateGroups_.getUnmodifiableView();
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public int getFederateGroupsCount() {
      return federateGroups_.size();
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public java.lang.String getFederateGroups(int index) {
      return federateGroups_.get(index);
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFederateGroupsBytes(int index) {
      return federateGroups_.getByteString(index);
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public Builder setFederateGroups(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFederateGroupsIsMutable();
      federateGroups_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public Builder addFederateGroups(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFederateGroupsIsMutable();
      federateGroups_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public Builder addAllFederateGroups(
        java.lang.Iterable<java.lang.String> values) {
      ensureFederateGroupsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, federateGroups_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public Builder clearFederateGroups() {
      federateGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string federateGroups = 2;</code>
     */
    public Builder addFederateGroupsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureFederateGroupsIsMutable();
      federateGroups_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.atakmap.Tak.FederateProvenance> federateProvenance_ =
      java.util.Collections.emptyList();
    private void ensureFederateProvenanceIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        federateProvenance_ = new java.util.ArrayList<com.atakmap.Tak.FederateProvenance>(federateProvenance_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.atakmap.Tak.FederateProvenance, com.atakmap.Tak.FederateProvenance.Builder, com.atakmap.Tak.FederateProvenanceOrBuilder> federateProvenanceBuilder_;

    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public java.util.List<com.atakmap.Tak.FederateProvenance> getFederateProvenanceList() {
      if (federateProvenanceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(federateProvenance_);
      } else {
        return federateProvenanceBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public int getFederateProvenanceCount() {
      if (federateProvenanceBuilder_ == null) {
        return federateProvenance_.size();
      } else {
        return federateProvenanceBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public com.atakmap.Tak.FederateProvenance getFederateProvenance(int index) {
      if (federateProvenanceBuilder_ == null) {
        return federateProvenance_.get(index);
      } else {
        return federateProvenanceBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder setFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance value) {
      if (federateProvenanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFederateProvenanceIsMutable();
        federateProvenance_.set(index, value);
        onChanged();
      } else {
        federateProvenanceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder setFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance.Builder builderForValue) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.set(index, builderForValue.build());
        onChanged();
      } else {
        federateProvenanceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder addFederateProvenance(com.atakmap.Tak.FederateProvenance value) {
      if (federateProvenanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(value);
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder addFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance value) {
      if (federateProvenanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(index, value);
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder addFederateProvenance(
        com.atakmap.Tak.FederateProvenance.Builder builderForValue) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(builderForValue.build());
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder addFederateProvenance(
        int index, com.atakmap.Tak.FederateProvenance.Builder builderForValue) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.add(index, builderForValue.build());
        onChanged();
      } else {
        federateProvenanceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder addAllFederateProvenance(
        java.lang.Iterable<? extends com.atakmap.Tak.FederateProvenance> values) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, federateProvenance_);
        onChanged();
      } else {
        federateProvenanceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder clearFederateProvenance() {
      if (federateProvenanceBuilder_ == null) {
        federateProvenance_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        federateProvenanceBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public Builder removeFederateProvenance(int index) {
      if (federateProvenanceBuilder_ == null) {
        ensureFederateProvenanceIsMutable();
        federateProvenance_.remove(index);
        onChanged();
      } else {
        federateProvenanceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public com.atakmap.Tak.FederateProvenance.Builder getFederateProvenanceBuilder(
        int index) {
      return getFederateProvenanceFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public com.atakmap.Tak.FederateProvenanceOrBuilder getFederateProvenanceOrBuilder(
        int index) {
      if (federateProvenanceBuilder_ == null) {
        return federateProvenance_.get(index);  } else {
        return federateProvenanceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public java.util.List<? extends com.atakmap.Tak.FederateProvenanceOrBuilder> 
         getFederateProvenanceOrBuilderList() {
      if (federateProvenanceBuilder_ != null) {
        return federateProvenanceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(federateProvenance_);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public com.atakmap.Tak.FederateProvenance.Builder addFederateProvenanceBuilder() {
      return getFederateProvenanceFieldBuilder().addBuilder(
          com.atakmap.Tak.FederateProvenance.getDefaultInstance());
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public com.atakmap.Tak.FederateProvenance.Builder addFederateProvenanceBuilder(
        int index) {
      return getFederateProvenanceFieldBuilder().addBuilder(
          index, com.atakmap.Tak.FederateProvenance.getDefaultInstance());
    }
    /**
     * <code>repeated .com.atakmap.FederateProvenance federateProvenance = 3;</code>
     */
    public java.util.List<com.atakmap.Tak.FederateProvenance.Builder> 
         getFederateProvenanceBuilderList() {
      return getFederateProvenanceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.atakmap.Tak.FederateProvenance, com.atakmap.Tak.FederateProvenance.Builder, com.atakmap.Tak.FederateProvenanceOrBuilder> 
        getFederateProvenanceFieldBuilder() {
      if (federateProvenanceBuilder_ == null) {
        federateProvenanceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.atakmap.Tak.FederateProvenance, com.atakmap.Tak.FederateProvenance.Builder, com.atakmap.Tak.FederateProvenanceOrBuilder>(
                federateProvenance_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        federateProvenance_ = null;
      }
      return federateProvenanceBuilder_;
    }

    private com.atakmap.Tak.FederateHops federateHops_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.atakmap.Tak.FederateHops, com.atakmap.Tak.FederateHops.Builder, com.atakmap.Tak.FederateHopsOrBuilder> federateHopsBuilder_;
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public boolean hasFederateHops() {
      return federateHopsBuilder_ != null || federateHops_ != null;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public com.atakmap.Tak.FederateHops getFederateHops() {
      if (federateHopsBuilder_ == null) {
        return federateHops_ == null ? com.atakmap.Tak.FederateHops.getDefaultInstance() : federateHops_;
      } else {
        return federateHopsBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public Builder setFederateHops(com.atakmap.Tak.FederateHops value) {
      if (federateHopsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        federateHops_ = value;
        onChanged();
      } else {
        federateHopsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public Builder setFederateHops(
        com.atakmap.Tak.FederateHops.Builder builderForValue) {
      if (federateHopsBuilder_ == null) {
        federateHops_ = builderForValue.build();
        onChanged();
      } else {
        federateHopsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public Builder mergeFederateHops(com.atakmap.Tak.FederateHops value) {
      if (federateHopsBuilder_ == null) {
        if (federateHops_ != null) {
          federateHops_ =
            com.atakmap.Tak.FederateHops.newBuilder(federateHops_).mergeFrom(value).buildPartial();
        } else {
          federateHops_ = value;
        }
        onChanged();
      } else {
        federateHopsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public Builder clearFederateHops() {
      if (federateHopsBuilder_ == null) {
        federateHops_ = null;
        onChanged();
      } else {
        federateHops_ = null;
        federateHopsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public com.atakmap.Tak.FederateHops.Builder getFederateHopsBuilder() {
      
      onChanged();
      return getFederateHopsFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    public com.atakmap.Tak.FederateHopsOrBuilder getFederateHopsOrBuilder() {
      if (federateHopsBuilder_ != null) {
        return federateHopsBuilder_.getMessageOrBuilder();
      } else {
        return federateHops_ == null ?
            com.atakmap.Tak.FederateHops.getDefaultInstance() : federateHops_;
      }
    }
    /**
     * <code>optional .com.atakmap.FederateHops federateHops = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.atakmap.Tak.FederateHops, com.atakmap.Tak.FederateHops.Builder, com.atakmap.Tak.FederateHopsOrBuilder> 
        getFederateHopsFieldBuilder() {
      if (federateHopsBuilder_ == null) {
        federateHopsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.atakmap.Tak.FederateHops, com.atakmap.Tak.FederateHops.Builder, com.atakmap.Tak.FederateHopsOrBuilder>(
                getFederateHops(),
                getParentForChildren(),
                isClean());
        federateHops_ = null;
      }
      return federateHopsBuilder_;
    }

    private java.util.List<com.atakmap.Tak.FederateGroups> nestedGroups_ =
      java.util.Collections.emptyList();
    private void ensureNestedGroupsIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        nestedGroups_ = new java.util.ArrayList<com.atakmap.Tak.FederateGroups>(nestedGroups_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.atakmap.Tak.FederateGroups, com.atakmap.Tak.FederateGroups.Builder, com.atakmap.Tak.FederateGroupsOrBuilder> nestedGroupsBuilder_;

    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public java.util.List<com.atakmap.Tak.FederateGroups> getNestedGroupsList() {
      if (nestedGroupsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nestedGroups_);
      } else {
        return nestedGroupsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public int getNestedGroupsCount() {
      if (nestedGroupsBuilder_ == null) {
        return nestedGroups_.size();
      } else {
        return nestedGroupsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public com.atakmap.Tak.FederateGroups getNestedGroups(int index) {
      if (nestedGroupsBuilder_ == null) {
        return nestedGroups_.get(index);
      } else {
        return nestedGroupsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder setNestedGroups(
        int index, com.atakmap.Tak.FederateGroups value) {
      if (nestedGroupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNestedGroupsIsMutable();
        nestedGroups_.set(index, value);
        onChanged();
      } else {
        nestedGroupsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder setNestedGroups(
        int index, com.atakmap.Tak.FederateGroups.Builder builderForValue) {
      if (nestedGroupsBuilder_ == null) {
        ensureNestedGroupsIsMutable();
        nestedGroups_.set(index, builderForValue.build());
        onChanged();
      } else {
        nestedGroupsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder addNestedGroups(com.atakmap.Tak.FederateGroups value) {
      if (nestedGroupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNestedGroupsIsMutable();
        nestedGroups_.add(value);
        onChanged();
      } else {
        nestedGroupsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder addNestedGroups(
        int index, com.atakmap.Tak.FederateGroups value) {
      if (nestedGroupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNestedGroupsIsMutable();
        nestedGroups_.add(index, value);
        onChanged();
      } else {
        nestedGroupsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder addNestedGroups(
        com.atakmap.Tak.FederateGroups.Builder builderForValue) {
      if (nestedGroupsBuilder_ == null) {
        ensureNestedGroupsIsMutable();
        nestedGroups_.add(builderForValue.build());
        onChanged();
      } else {
        nestedGroupsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder addNestedGroups(
        int index, com.atakmap.Tak.FederateGroups.Builder builderForValue) {
      if (nestedGroupsBuilder_ == null) {
        ensureNestedGroupsIsMutable();
        nestedGroups_.add(index, builderForValue.build());
        onChanged();
      } else {
        nestedGroupsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder addAllNestedGroups(
        java.lang.Iterable<? extends com.atakmap.Tak.FederateGroups> values) {
      if (nestedGroupsBuilder_ == null) {
        ensureNestedGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nestedGroups_);
        onChanged();
      } else {
        nestedGroupsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder clearNestedGroups() {
      if (nestedGroupsBuilder_ == null) {
        nestedGroups_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        nestedGroupsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public Builder removeNestedGroups(int index) {
      if (nestedGroupsBuilder_ == null) {
        ensureNestedGroupsIsMutable();
        nestedGroups_.remove(index);
        onChanged();
      } else {
        nestedGroupsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public com.atakmap.Tak.FederateGroups.Builder getNestedGroupsBuilder(
        int index) {
      return getNestedGroupsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public com.atakmap.Tak.FederateGroupsOrBuilder getNestedGroupsOrBuilder(
        int index) {
      if (nestedGroupsBuilder_ == null) {
        return nestedGroups_.get(index);  } else {
        return nestedGroupsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public java.util.List<? extends com.atakmap.Tak.FederateGroupsOrBuilder> 
         getNestedGroupsOrBuilderList() {
      if (nestedGroupsBuilder_ != null) {
        return nestedGroupsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nestedGroups_);
      }
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public com.atakmap.Tak.FederateGroups.Builder addNestedGroupsBuilder() {
      return getNestedGroupsFieldBuilder().addBuilder(
          com.atakmap.Tak.FederateGroups.getDefaultInstance());
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public com.atakmap.Tak.FederateGroups.Builder addNestedGroupsBuilder(
        int index) {
      return getNestedGroupsFieldBuilder().addBuilder(
          index, com.atakmap.Tak.FederateGroups.getDefaultInstance());
    }
    /**
     * <code>repeated .com.atakmap.FederateGroups nestedGroups = 5;</code>
     */
    public java.util.List<com.atakmap.Tak.FederateGroups.Builder> 
         getNestedGroupsBuilderList() {
      return getNestedGroupsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.atakmap.Tak.FederateGroups, com.atakmap.Tak.FederateGroups.Builder, com.atakmap.Tak.FederateGroupsOrBuilder> 
        getNestedGroupsFieldBuilder() {
      if (nestedGroupsBuilder_ == null) {
        nestedGroupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.atakmap.Tak.FederateGroups, com.atakmap.Tak.FederateGroups.Builder, com.atakmap.Tak.FederateGroupsOrBuilder>(
                nestedGroups_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        nestedGroups_ = null;
      }
      return nestedGroupsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.atakmap.FederateGroups)
  }

  // @@protoc_insertion_point(class_scope:com.atakmap.FederateGroups)
  private static final com.atakmap.Tak.FederateGroups DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.atakmap.Tak.FederateGroups();
  }

  public static com.atakmap.Tak.FederateGroups getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FederateGroups>
      PARSER = new com.google.protobuf.AbstractParser<FederateGroups>() {
    public FederateGroups parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new FederateGroups(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FederateGroups> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FederateGroups> getParserForType() {
    return PARSER;
  }

  public com.atakmap.Tak.FederateGroups getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

