// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: takmessage.proto

package atakmap.commoncommo.protobuf.v1;

public final class Takmessage {
  private Takmessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TakMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:atakmap.commoncommo.protobuf.v1.TakMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional - if omitted, continue using last reported control
     * information
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
     */
    boolean hasTakControl();
    /**
     * <pre>
     * Optional - if omitted, continue using last reported control
     * information
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
     */
    atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl getTakControl();
    /**
     * <pre>
     * Optional - if omitted, continue using last reported control
     * information
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
     */
    atakmap.commoncommo.protobuf.v1.Takcontrol.TakControlOrBuilder getTakControlOrBuilder();

    /**
     * <pre>
     * Optional - if omitted, no event data in this message
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
     */
    boolean hasCotEvent();
    /**
     * <pre>
     * Optional - if omitted, no event data in this message
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
     */
    atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent getCotEvent();
    /**
     * <pre>
     * Optional - if omitted, no event data in this message
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
     */
    atakmap.commoncommo.protobuf.v1.Cotevent.CotEventOrBuilder getCotEventOrBuilder();

    /**
     * <code>optional uint64 submissionTime = 3;</code>
     */
    long getSubmissionTime();

    /**
     * <code>optional uint64 creationTime = 4;</code>
     */
    long getCreationTime();
  }
  /**
   * <pre>
   * Top level message sent for TAK Messaging Protocol Version 1.
   * </pre>
   *
   * Protobuf type {@code atakmap.commoncommo.protobuf.v1.TakMessage}
   */
  public  static final class TakMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:atakmap.commoncommo.protobuf.v1.TakMessage)
      TakMessageOrBuilder {
    // Use TakMessage.newBuilder() to construct.
    private TakMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TakMessage() {
      submissionTime_ = 0L;
      creationTime_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TakMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.Builder subBuilder = null;
              if (takControl_ != null) {
                subBuilder = takControl_.toBuilder();
              }
              takControl_ = input.readMessage(atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(takControl_);
                takControl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.Builder subBuilder = null;
              if (cotEvent_ != null) {
                subBuilder = cotEvent_.toBuilder();
              }
              cotEvent_ = input.readMessage(atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cotEvent_);
                cotEvent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              submissionTime_ = input.readUInt64();
              break;
            }
            case 32: {

              creationTime_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return atakmap.commoncommo.protobuf.v1.Takmessage.internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return atakmap.commoncommo.protobuf.v1.Takmessage.internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.class, atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.Builder.class);
    }

    public static final int TAKCONTROL_FIELD_NUMBER = 1;
    private atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl takControl_;
    /**
     * <pre>
     * Optional - if omitted, continue using last reported control
     * information
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
     */
    public boolean hasTakControl() {
      return takControl_ != null;
    }
    /**
     * <pre>
     * Optional - if omitted, continue using last reported control
     * information
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
     */
    public atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl getTakControl() {
      return takControl_ == null ? atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.getDefaultInstance() : takControl_;
    }
    /**
     * <pre>
     * Optional - if omitted, continue using last reported control
     * information
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
     */
    public atakmap.commoncommo.protobuf.v1.Takcontrol.TakControlOrBuilder getTakControlOrBuilder() {
      return getTakControl();
    }

    public static final int COTEVENT_FIELD_NUMBER = 2;
    private atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent cotEvent_;
    /**
     * <pre>
     * Optional - if omitted, no event data in this message
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
     */
    public boolean hasCotEvent() {
      return cotEvent_ != null;
    }
    /**
     * <pre>
     * Optional - if omitted, no event data in this message
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
     */
    public atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent getCotEvent() {
      return cotEvent_ == null ? atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.getDefaultInstance() : cotEvent_;
    }
    /**
     * <pre>
     * Optional - if omitted, no event data in this message
     * </pre>
     *
     * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
     */
    public atakmap.commoncommo.protobuf.v1.Cotevent.CotEventOrBuilder getCotEventOrBuilder() {
      return getCotEvent();
    }

    public static final int SUBMISSIONTIME_FIELD_NUMBER = 3;
    private long submissionTime_;
    /**
     * <code>optional uint64 submissionTime = 3;</code>
     */
    public long getSubmissionTime() {
      return submissionTime_;
    }

    public static final int CREATIONTIME_FIELD_NUMBER = 4;
    private long creationTime_;
    /**
     * <code>optional uint64 creationTime = 4;</code>
     */
    public long getCreationTime() {
      return creationTime_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (takControl_ != null) {
        output.writeMessage(1, getTakControl());
      }
      if (cotEvent_ != null) {
        output.writeMessage(2, getCotEvent());
      }
      if (submissionTime_ != 0L) {
        output.writeUInt64(3, submissionTime_);
      }
      if (creationTime_ != 0L) {
        output.writeUInt64(4, creationTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (takControl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTakControl());
      }
      if (cotEvent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCotEvent());
      }
      if (submissionTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, submissionTime_);
      }
      if (creationTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, creationTime_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage)) {
        return super.equals(obj);
      }
      atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage other = (atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage) obj;

      boolean result = true;
      result = result && (hasTakControl() == other.hasTakControl());
      if (hasTakControl()) {
        result = result && getTakControl()
            .equals(other.getTakControl());
      }
      result = result && (hasCotEvent() == other.hasCotEvent());
      if (hasCotEvent()) {
        result = result && getCotEvent()
            .equals(other.getCotEvent());
      }
      result = result && (getSubmissionTime()
          == other.getSubmissionTime());
      result = result && (getCreationTime()
          == other.getCreationTime());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTakControl()) {
        hash = (37 * hash) + TAKCONTROL_FIELD_NUMBER;
        hash = (53 * hash) + getTakControl().hashCode();
      }
      if (hasCotEvent()) {
        hash = (37 * hash) + COTEVENT_FIELD_NUMBER;
        hash = (53 * hash) + getCotEvent().hashCode();
      }
      hash = (37 * hash) + SUBMISSIONTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSubmissionTime());
      hash = (37 * hash) + CREATIONTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreationTime());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Top level message sent for TAK Messaging Protocol Version 1.
     * </pre>
     *
     * Protobuf type {@code atakmap.commoncommo.protobuf.v1.TakMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:atakmap.commoncommo.protobuf.v1.TakMessage)
        atakmap.commoncommo.protobuf.v1.Takmessage.TakMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return atakmap.commoncommo.protobuf.v1.Takmessage.internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return atakmap.commoncommo.protobuf.v1.Takmessage.internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.class, atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.Builder.class);
      }

      // Construct using atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (takControlBuilder_ == null) {
          takControl_ = null;
        } else {
          takControl_ = null;
          takControlBuilder_ = null;
        }
        if (cotEventBuilder_ == null) {
          cotEvent_ = null;
        } else {
          cotEvent_ = null;
          cotEventBuilder_ = null;
        }
        submissionTime_ = 0L;

        creationTime_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return atakmap.commoncommo.protobuf.v1.Takmessage.internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_descriptor;
      }

      public atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage getDefaultInstanceForType() {
        return atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.getDefaultInstance();
      }

      public atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage build() {
        atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage buildPartial() {
        atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage result = new atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage(this);
        if (takControlBuilder_ == null) {
          result.takControl_ = takControl_;
        } else {
          result.takControl_ = takControlBuilder_.build();
        }
        if (cotEventBuilder_ == null) {
          result.cotEvent_ = cotEvent_;
        } else {
          result.cotEvent_ = cotEventBuilder_.build();
        }
        result.submissionTime_ = submissionTime_;
        result.creationTime_ = creationTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage) {
          return mergeFrom((atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage other) {
        if (other == atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage.getDefaultInstance()) return this;
        if (other.hasTakControl()) {
          mergeTakControl(other.getTakControl());
        }
        if (other.hasCotEvent()) {
          mergeCotEvent(other.getCotEvent());
        }
        if (other.getSubmissionTime() != 0L) {
          setSubmissionTime(other.getSubmissionTime());
        }
        if (other.getCreationTime() != 0L) {
          setCreationTime(other.getCreationTime());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl takControl_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl, atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.Builder, atakmap.commoncommo.protobuf.v1.Takcontrol.TakControlOrBuilder> takControlBuilder_;
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public boolean hasTakControl() {
        return takControlBuilder_ != null || takControl_ != null;
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl getTakControl() {
        if (takControlBuilder_ == null) {
          return takControl_ == null ? atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.getDefaultInstance() : takControl_;
        } else {
          return takControlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public Builder setTakControl(atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl value) {
        if (takControlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          takControl_ = value;
          onChanged();
        } else {
          takControlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public Builder setTakControl(
          atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.Builder builderForValue) {
        if (takControlBuilder_ == null) {
          takControl_ = builderForValue.build();
          onChanged();
        } else {
          takControlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public Builder mergeTakControl(atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl value) {
        if (takControlBuilder_ == null) {
          if (takControl_ != null) {
            takControl_ =
              atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.newBuilder(takControl_).mergeFrom(value).buildPartial();
          } else {
            takControl_ = value;
          }
          onChanged();
        } else {
          takControlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public Builder clearTakControl() {
        if (takControlBuilder_ == null) {
          takControl_ = null;
          onChanged();
        } else {
          takControl_ = null;
          takControlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.Builder getTakControlBuilder() {
        
        onChanged();
        return getTakControlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      public atakmap.commoncommo.protobuf.v1.Takcontrol.TakControlOrBuilder getTakControlOrBuilder() {
        if (takControlBuilder_ != null) {
          return takControlBuilder_.getMessageOrBuilder();
        } else {
          return takControl_ == null ?
              atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.getDefaultInstance() : takControl_;
        }
      }
      /**
       * <pre>
       * Optional - if omitted, continue using last reported control
       * information
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.TakControl takControl = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl, atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.Builder, atakmap.commoncommo.protobuf.v1.Takcontrol.TakControlOrBuilder> 
          getTakControlFieldBuilder() {
        if (takControlBuilder_ == null) {
          takControlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl, atakmap.commoncommo.protobuf.v1.Takcontrol.TakControl.Builder, atakmap.commoncommo.protobuf.v1.Takcontrol.TakControlOrBuilder>(
                  getTakControl(),
                  getParentForChildren(),
                  isClean());
          takControl_ = null;
        }
        return takControlBuilder_;
      }

      private atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent cotEvent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent, atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.Builder, atakmap.commoncommo.protobuf.v1.Cotevent.CotEventOrBuilder> cotEventBuilder_;
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public boolean hasCotEvent() {
        return cotEventBuilder_ != null || cotEvent_ != null;
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent getCotEvent() {
        if (cotEventBuilder_ == null) {
          return cotEvent_ == null ? atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.getDefaultInstance() : cotEvent_;
        } else {
          return cotEventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public Builder setCotEvent(atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent value) {
        if (cotEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cotEvent_ = value;
          onChanged();
        } else {
          cotEventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public Builder setCotEvent(
          atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.Builder builderForValue) {
        if (cotEventBuilder_ == null) {
          cotEvent_ = builderForValue.build();
          onChanged();
        } else {
          cotEventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public Builder mergeCotEvent(atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent value) {
        if (cotEventBuilder_ == null) {
          if (cotEvent_ != null) {
            cotEvent_ =
              atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.newBuilder(cotEvent_).mergeFrom(value).buildPartial();
          } else {
            cotEvent_ = value;
          }
          onChanged();
        } else {
          cotEventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public Builder clearCotEvent() {
        if (cotEventBuilder_ == null) {
          cotEvent_ = null;
          onChanged();
        } else {
          cotEvent_ = null;
          cotEventBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.Builder getCotEventBuilder() {
        
        onChanged();
        return getCotEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      public atakmap.commoncommo.protobuf.v1.Cotevent.CotEventOrBuilder getCotEventOrBuilder() {
        if (cotEventBuilder_ != null) {
          return cotEventBuilder_.getMessageOrBuilder();
        } else {
          return cotEvent_ == null ?
              atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.getDefaultInstance() : cotEvent_;
        }
      }
      /**
       * <pre>
       * Optional - if omitted, no event data in this message
       * </pre>
       *
       * <code>optional .atakmap.commoncommo.protobuf.v1.CotEvent cotEvent = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent, atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.Builder, atakmap.commoncommo.protobuf.v1.Cotevent.CotEventOrBuilder> 
          getCotEventFieldBuilder() {
        if (cotEventBuilder_ == null) {
          cotEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent, atakmap.commoncommo.protobuf.v1.Cotevent.CotEvent.Builder, atakmap.commoncommo.protobuf.v1.Cotevent.CotEventOrBuilder>(
                  getCotEvent(),
                  getParentForChildren(),
                  isClean());
          cotEvent_ = null;
        }
        return cotEventBuilder_;
      }

      private long submissionTime_ ;
      /**
       * <code>optional uint64 submissionTime = 3;</code>
       */
      public long getSubmissionTime() {
        return submissionTime_;
      }
      /**
       * <code>optional uint64 submissionTime = 3;</code>
       */
      public Builder setSubmissionTime(long value) {
        
        submissionTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 submissionTime = 3;</code>
       */
      public Builder clearSubmissionTime() {
        
        submissionTime_ = 0L;
        onChanged();
        return this;
      }

      private long creationTime_ ;
      /**
       * <code>optional uint64 creationTime = 4;</code>
       */
      public long getCreationTime() {
        return creationTime_;
      }
      /**
       * <code>optional uint64 creationTime = 4;</code>
       */
      public Builder setCreationTime(long value) {
        
        creationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 creationTime = 4;</code>
       */
      public Builder clearCreationTime() {
        
        creationTime_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:atakmap.commoncommo.protobuf.v1.TakMessage)
    }

    // @@protoc_insertion_point(class_scope:atakmap.commoncommo.protobuf.v1.TakMessage)
    private static final atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage();
    }

    public static atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TakMessage>
        PARSER = new com.google.protobuf.AbstractParser<TakMessage>() {
      public TakMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TakMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TakMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TakMessage> getParserForType() {
      return PARSER;
    }

    public atakmap.commoncommo.protobuf.v1.Takmessage.TakMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020takmessage.proto\022\037atakmap.commoncommo." +
      "protobuf.v1\032\016cotevent.proto\032\020takcontrol." +
      "proto\"\270\001\n\nTakMessage\022?\n\ntakControl\030\001 \001(\013" +
      "2+.atakmap.commoncommo.protobuf.v1.TakCo" +
      "ntrol\022;\n\010cotEvent\030\002 \001(\0132).atakmap.common" +
      "commo.protobuf.v1.CotEvent\022\026\n\016submission" +
      "Time\030\003 \001(\004\022\024\n\014creationTime\030\004 \001(\004b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          atakmap.commoncommo.protobuf.v1.Cotevent.getDescriptor(),
          atakmap.commoncommo.protobuf.v1.Takcontrol.getDescriptor(),
        }, assigner);
    internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_atakmap_commoncommo_protobuf_v1_TakMessage_descriptor,
        new java.lang.String[] { "TakControl", "CotEvent", "SubmissionTime", "CreationTime", });
    atakmap.commoncommo.protobuf.v1.Cotevent.getDescriptor();
    atakmap.commoncommo.protobuf.v1.Takcontrol.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
