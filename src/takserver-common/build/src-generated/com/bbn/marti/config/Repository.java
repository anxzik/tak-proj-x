//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.bbn.marti.config;

import java.io.Serializable;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Repository Service
 * 
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <all>
 *         <element ref="{http://bbn.com/marti/xml/config}connection"/>
 *       </all>
 *       <attribute name="enable" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="numDbConnections" type="{http://www.w3.org/2001/XMLSchema}int" default="200" />
 *       <attribute name="connectionPoolAutoSize" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="primaryKeyBatchSize" type="{http://www.w3.org/2001/XMLSchema}int" default="500" />
 *       <attribute name="insertionBatchSize" type="{http://www.w3.org/2001/XMLSchema}int" default="500" />
 *       <attribute name="archive" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="iconsetDir" type="{http://www.w3.org/2001/XMLSchema}string" default="iconsets" />
 *       <attribute name="enableCallsignAudit" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="contactCacheMaxClearRateSeconds" type="{http://www.w3.org/2001/XMLSchema}int" default="1" />
 *       <attribute name="dbTimeoutMs" type="{http://www.w3.org/2001/XMLSchema}long" default="60000" />
 *       <attribute name="dbConnectionMaxLifetimeMs" type="{http://www.w3.org/2001/XMLSchema}int" default="600000" />
 *       <attribute name="dbConnectionMaxIdleMs" type="{http://www.w3.org/2001/XMLSchema}int" default="10000" />
 *       <attribute name="poolScaleFactor" type="{http://www.w3.org/2001/XMLSchema}int" default="200" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "repository")
public class Repository
    implements Serializable
{

    private static final long serialVersionUID = 6107951534079953L;
    @XmlElement(required = true)
    protected Connection connection;
    @XmlAttribute(name = "enable")
    protected Boolean enable;
    @XmlAttribute(name = "numDbConnections")
    protected Integer numDbConnections;
    @XmlAttribute(name = "connectionPoolAutoSize")
    protected Boolean connectionPoolAutoSize;
    @XmlAttribute(name = "primaryKeyBatchSize")
    protected Integer primaryKeyBatchSize;
    @XmlAttribute(name = "insertionBatchSize")
    protected Integer insertionBatchSize;
    @XmlAttribute(name = "archive")
    protected Boolean archive;
    @XmlAttribute(name = "iconsetDir")
    protected String iconsetDir;
    @XmlAttribute(name = "enableCallsignAudit")
    protected Boolean enableCallsignAudit;
    @XmlAttribute(name = "contactCacheMaxClearRateSeconds")
    protected Integer contactCacheMaxClearRateSeconds;
    @XmlAttribute(name = "dbTimeoutMs")
    protected Long dbTimeoutMs;
    @XmlAttribute(name = "dbConnectionMaxLifetimeMs")
    protected Integer dbConnectionMaxLifetimeMs;
    @XmlAttribute(name = "dbConnectionMaxIdleMs")
    protected Integer dbConnectionMaxIdleMs;
    @XmlAttribute(name = "poolScaleFactor")
    protected Integer poolScaleFactor;

    /**
     * Gets the value of the connection property.
     * 
     * @return
     *     possible object is
     *     {@link Connection }
     *     
     */
    public Connection getConnection() {
        return connection;
    }

    /**
     * Sets the value of the connection property.
     * 
     * @param value
     *     allowed object is
     *     {@link Connection }
     *     
     */
    public void setConnection(Connection value) {
        this.connection = value;
    }

    /**
     * Gets the value of the enable property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnable() {
        if (enable == null) {
            return true;
        } else {
            return enable;
        }
    }

    /**
     * Sets the value of the enable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnable(Boolean value) {
        this.enable = value;
    }

    /**
     * Gets the value of the numDbConnections property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNumDbConnections() {
        if (numDbConnections == null) {
            return  200;
        } else {
            return numDbConnections;
        }
    }

    /**
     * Sets the value of the numDbConnections property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumDbConnections(Integer value) {
        this.numDbConnections = value;
    }

    /**
     * Gets the value of the connectionPoolAutoSize property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isConnectionPoolAutoSize() {
        if (connectionPoolAutoSize == null) {
            return true;
        } else {
            return connectionPoolAutoSize;
        }
    }

    /**
     * Sets the value of the connectionPoolAutoSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setConnectionPoolAutoSize(Boolean value) {
        this.connectionPoolAutoSize = value;
    }

    /**
     * Gets the value of the primaryKeyBatchSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getPrimaryKeyBatchSize() {
        if (primaryKeyBatchSize == null) {
            return  500;
        } else {
            return primaryKeyBatchSize;
        }
    }

    /**
     * Sets the value of the primaryKeyBatchSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPrimaryKeyBatchSize(Integer value) {
        this.primaryKeyBatchSize = value;
    }

    /**
     * Gets the value of the insertionBatchSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getInsertionBatchSize() {
        if (insertionBatchSize == null) {
            return  500;
        } else {
            return insertionBatchSize;
        }
    }

    /**
     * Sets the value of the insertionBatchSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setInsertionBatchSize(Integer value) {
        this.insertionBatchSize = value;
    }

    /**
     * Gets the value of the archive property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isArchive() {
        if (archive == null) {
            return false;
        } else {
            return archive;
        }
    }

    /**
     * Sets the value of the archive property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setArchive(Boolean value) {
        this.archive = value;
    }

    /**
     * Gets the value of the iconsetDir property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIconsetDir() {
        if (iconsetDir == null) {
            return "iconsets";
        } else {
            return iconsetDir;
        }
    }

    /**
     * Sets the value of the iconsetDir property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIconsetDir(String value) {
        this.iconsetDir = value;
    }

    /**
     * Gets the value of the enableCallsignAudit property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEnableCallsignAudit() {
        if (enableCallsignAudit == null) {
            return true;
        } else {
            return enableCallsignAudit;
        }
    }

    /**
     * Sets the value of the enableCallsignAudit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableCallsignAudit(Boolean value) {
        this.enableCallsignAudit = value;
    }

    /**
     * Gets the value of the contactCacheMaxClearRateSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getContactCacheMaxClearRateSeconds() {
        if (contactCacheMaxClearRateSeconds == null) {
            return  1;
        } else {
            return contactCacheMaxClearRateSeconds;
        }
    }

    /**
     * Sets the value of the contactCacheMaxClearRateSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setContactCacheMaxClearRateSeconds(Integer value) {
        this.contactCacheMaxClearRateSeconds = value;
    }

    /**
     * Gets the value of the dbTimeoutMs property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getDbTimeoutMs() {
        if (dbTimeoutMs == null) {
            return  60000L;
        } else {
            return dbTimeoutMs;
        }
    }

    /**
     * Sets the value of the dbTimeoutMs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setDbTimeoutMs(Long value) {
        this.dbTimeoutMs = value;
    }

    /**
     * Gets the value of the dbConnectionMaxLifetimeMs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getDbConnectionMaxLifetimeMs() {
        if (dbConnectionMaxLifetimeMs == null) {
            return  600000;
        } else {
            return dbConnectionMaxLifetimeMs;
        }
    }

    /**
     * Sets the value of the dbConnectionMaxLifetimeMs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDbConnectionMaxLifetimeMs(Integer value) {
        this.dbConnectionMaxLifetimeMs = value;
    }

    /**
     * Gets the value of the dbConnectionMaxIdleMs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getDbConnectionMaxIdleMs() {
        if (dbConnectionMaxIdleMs == null) {
            return  10000;
        } else {
            return dbConnectionMaxIdleMs;
        }
    }

    /**
     * Sets the value of the dbConnectionMaxIdleMs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDbConnectionMaxIdleMs(Integer value) {
        this.dbConnectionMaxIdleMs = value;
    }

    /**
     * Gets the value of the poolScaleFactor property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getPoolScaleFactor() {
        if (poolScaleFactor == null) {
            return  200;
        } else {
            return poolScaleFactor;
        }
    }

    /**
     * Sets the value of the poolScaleFactor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPoolScaleFactor(Integer value) {
        this.poolScaleFactor = value;
    }

}
